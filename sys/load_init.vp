(import 'inc/func.inc)
(import 'inc/load.inc)

(def-func 'sys/load_init)
	;set prebound functions as read/write/executable
	(vp-lea-p '_func_start r0)
	(vp-cpy-rr r0 r1)
	(loop-start)
	 	(vp-cpy-ir-ui r1 fn_header_length r2)
		(breakif '(r2 == 0))
		(vp-add-rr r2 r1)
	(loop-end)
	(vp-and-cr (sub 0 ld_page_size) r0)
	(vp-sub-rr r0 r1)
	sys_mprotect r0, r1, prot_read|prot_write|prot_exec

	;get loader statics and bind function !
	(vp-lea-p '_func_start r6)
	(vp-cpy-ir-ui r6 fn_header_length r0)
	(vp-add-rr r0 r6)
	(vp-cpy-rr r6 r5)
	(vp-cpy-ir-ui r6 fn_header_length r0)
	(vp-add-rr r0 r6)
	(vp-cpy-ir-ui r6 fn_header_entry r0)
	(vp-add-rr r0 r6)
	(vp-cpy-ir-ui r5 fn_header_entry r0)
	(vp-add-rr r0 r5)

	;init reloc buffer address
	(vp-lea-i r6 ld_statics_reloc_buffer r1)
	(vp-cpy-ri r1 r6 ld_statics_reloc_stack)

	;add all prebound functions to function list
	(vp-lea-p '_func_start r1)
	(loop-start)
	 	(vp-cpy-ir-ui r1 fn_header_length r2)
		(breakif '(r2 == 0))
		(vp-cpy-ir r6 ld_statics_function_flist r0)
		(vp-cpy-ri r0 r1 0)
		(vp-cpy-ri r1 r6 ld_statics_function_flist)
		(vp-add-rr r2 r1)
	(loop-end)

	;bind all prebound function intra references
	(vp-lea-p '_func_start r2)
	(loop-start)
		(vp-cpy-ir-ui r2 fn_header_length r1)
		(breakif '(r1 == 0))
		(vp-cpy-ir-ui r2 fn_header_links r0)
		(vp-add-rr r2 r0)
		(vp-add-rr r1 r2)
		(loop-start)
			(vp-cpy-ir r0 0 r1)
			(breakif '(r1 == 0))
			(vp-push r0 r2 r5)
			(vp-add-rr r1 r0)
			(vp-call-r r5)		;sys/load_bind
			(vpif '(r0 == 0))
				;no such function
				(vp-lea-p 'bind_error r0)
				(sys-write-string 2 r0 bind_error_end-bind_error)
				(vp-cpy-ir r4 (ptr_size * 2) r0)
				(vp-add-ir r0 r0)
				(vp-call 'string_skip)
				(vp-lea-i r0 -1 r1)
				(vp-cpy-ir r4 (ptr_size * 2) r0)
				(vp-add-ir r0 r0)
				(vp-sub-rr r0 r1)
				(sys-write-string 2 r0 r1)
				(vp-cpy-cr 10 r1)
				(sys-write-char '(2 r1))
				(sys-exit '(1))
			(endif)
			(vp-cpy-rr r0 r1)
			(vp-pop r0 r2 r5)
			(vp-cpy-ri r1 r0 0)
			(vp-add-cr ptr_size r0)
		(loop-end)
	(loop-end)
	(vp-ret)

(vp-label 'string_skip)
	(loop-start)
		(vp-cpy-ir-ub r0 r1)
		(vp-inc r0)
	(loop-until '(r1 == 0))
	ret

(vp-label 'bind_error)
	(vp-string "Prebind error ")
(vp-label 'bind_error_end)

(def-func-end)
