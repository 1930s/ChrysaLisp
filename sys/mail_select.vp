(import 'inc/func.inc)
(import 'inc/task.inc)

(def-func 'sys/mail_select)
	;inputs
	;r0 = mailbox address array
	;r1 = mailbox count
	;outputs
	;r0 = mailbox address
	;trashes
	;r1-r3, r5

	(vp-cpy-rr r0 r3)
	(vp-mul-cr ptr_size r1)
	(vp-lea-ir r0 r1 r1)
	(loop-start)
		;check if any have mail
		(vp-cpy-rr r3 r0)
		(loop-start)
			(vp-cpy-ir r0 0 r2)
			lh-is-empty r2, r2
			(vpif '(r2 != 0))
				;return first mailbox not empty
				(vp-cpy-ir r0 0 r0)
				(vp-ret)
			(endif)
			(vp-add-cr ptr_size r0)
		(loop-until '(r0 == r1))

		;fill in all tcb's and suspend
		(f-bind 'sys_task 'statics r5)
		(vp-cpy-ir r5 tk_statics_current_tcb r5)
		(vp-cpy-rr r3 r0)
		(loop-start)
			(vp-cpy-ir r0 0 r2)
			(vp-cpy-ri r5 r2 mailbox_tcb)
			(vp-add-cr ptr_size r0)
		(loop-until '(r0 == r1))

		(f-call 'sys_task 'suspend)

		;clear all tcb's
		(vp-xor-rr r5 r5)
		(vp-cpy-rr r3 r0)
		(loop-start)
			(vp-cpy-ir r0 0 r2)
			(vp-cpy-ri r5 r2 mailbox_tcb)
			(vp-add-cr ptr_size r0)
		(loop-until '(r0 == r1))
	(loop-end)

(def-func-end)
