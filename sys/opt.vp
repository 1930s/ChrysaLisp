(import 'inc/func.inc)
(import 'inc/mail.inc)
(import 'inc/task.inc)
(import 'inc/link.inc)
(import 'inc/string.inc)
(import 'inc/load.inc)

(def-func 'sys/opt_process)
	;process command options
	;inputs
	;r0 = argv array
	;trashes
	;r0-r3, r5-r14

	(vp-cpy-rr r0 r14)
	(loop-start)
		(vp-cpy-ir r14 0 r13)
		(breakif '(r13 == 0))
		(vp-lea-p 'options_table r12)
		(loop-start)
			(vp-cpy-ir r12 0 r11)
			(breakif '(r11 == 0))
			(vp-add-cr ptr_size r12)
			(f-call 'sys_string 'compare '(r12 r13) '(r0))
			(vpif '(r0 == 0))
				(vp-lea-p 'options_table r0)
				(vp-add-rr r11 r0)
				(vp-call-r r0)
				(vp-jmp 'next_arg)
			(endif)
			(f-call 'sys_string 'length '(r12) '(_ r1))
			(vp-add-rr r1 r12)
			(vp-add-cr ptr_size r12)
			(vp-and-cr (neg ptr_size) r12)
		(loop-end)
	(vp-label 'next_arg)
		(vp-cpy-ir r14 0 r0)
		(vp-add-cr ptr_size r14)
	(loop-until '(r0 == 0))
	(vp-ret)

(vp-label 'opt_cpu)
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;set cpu ID
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 0 r0)
	(vpif '(r0 != 0))
		(f-call 'sys_string 'to_long '(r0 10) '(r0))
		(f-bind 'sys_task 'statics r1)
		(vp-cpy-ri r0 r1 tk_statics_cpu_id)
	(endif)
	(vp-ret)

(vp-label 'opt_run)
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;load and run task
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 0 r0)
	(vpif '(r0 != 0))
		(f-call 'sys_load 'bind '(r0) '(r0))
		(vpif '(r0 != 0))
			(f-call 'sys_task 'start '(r0))
		(endif)
	(endif)
	(vp-ret)

(vp-label 'opt_link)
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;start link task
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 0 r0)
	(vpif '(r0 != 0))
		;start link
		(f-call 'sys_task 'start `((@ ,(f-path 'sys_link 'link))) '(r0 r5 r6))

		;allocate params message
		(f-call 'sys_mail 'alloc '() '(r7))

		;fill in destination
		(vp-cpy-ri r5 r0 (add msg_dest id_mbox))
		(vp-cpy-ri r6 r0 (add msg_dest id_cpu))

		;fill in parameters and set length
		(f-call 'sys_string 'copy '(($ link_path) (& r7 msg_data)) '(_ r1))
		(vp-sub-cr 1 r1)
		(f-call 'sys_string 'copy '((r14 0) r1) '(_ r1))
		(vp-sub-rr r7 r1)
		(vp-cpy-ri r1 r7 msg_length)

		;send to link task
		(f-call 'sys_mail 'send '(r7))
	(endif)
	(vp-ret)

(vp-label 'link_path)
	(vp-string "/tmp/") (vp-byte 0)

	(vp-align ptr_size)
(vp-label 'options_table)
	(vp-long `(sub ,(label-sym 'opt_cpu) ,(label-sym 'options_table)))
		(vp-string "-cpu") (vp-byte 0)
		(vp-align ptr_size)
	(vp-long `(sub ,(label-sym 'opt_run) ,(label-sym 'options_table)))
		(vp-string "-run") (vp-byte 0)
		(vp-align ptr_size)
	(vp-long `(sub ,(label-sym 'opt_link) ,(label-sym 'options_table)))
		(vp-string "-l") (vp-byte 0)
		(vp-align ptr_size)
	(vp-long 0)

(def-func-end)
