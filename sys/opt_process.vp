(import 'inc/func.inc)
(import 'inc/mail.inc)
(import 'inc/task.inc)
(import 'inc/link.inc)
(import 'inc/string.inc)
(import 'inc/load.inc)

(def-func 'sys/opt_process)
	;process command options
	;inputs
	;r0 = argv array
	;trashes
	;r0-r3, r5-r14

	(vp-cpy-rr r0 r14)
	(loop-start)
		(vp-cpy-ir r14 r13)
		breakif r13, ==, 0
		(vp-rel 'options_table r12)
		(loop-start)
			(vp-cpy-ir r12 r11)
			breakif r11, ==, 0
			(vp-add-cr ptr_size r12)
			f_call sys_string, compare, {r12, r13}, {r0}
			if r0, ==, 0
				(vp-rel 'options_table r0)
				(vp-add-rr r11 r0)
				(vp-call-r r0)
				vp_jmp next_arg
			endif
			f_call sys_string, length, {r12}, {r1}
			(vp-add-rr r1 r12)
			(vp-add-cr ptr_size r12)
			(vp-and-cr (sub 0 ptr_size) r12)
		(loop-end)
	next_arg:
		(vp-cpy-ir r14 r0)
		(vp-add-cr ptr_size r14)
	loop_until r0, ==, 0
	(vp-ret)

opt_cpu:
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;set cpu ID
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 r0)
	if r0, !=, 0
		f_call sys_string, to_long, {r0, 10}, {r0}
		(f-bind 'sys_task 'statics r1)
		(vp-cpy-ri r0 r1 tk_statics_cpu_id)
	endif
	(vp-ret)

opt_run:
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;load and run task
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 r0)
	if r0, !=, 0
		f_call sys_load, bind, {r0}, {r0}
		if r0, !=, 0
			f_call sys_task, start, {r0}, {r0, r1}
		endif
	endif
	(vp-ret)

opt_link:
	;inputs
	;r14 = arg pointer
	;outputs
	;r14 = arg pointer updated

	;start link task
	(vp-add-cr ptr_size r14)
	(vp-cpy-ir r14 r0)
	if r0, !=, 0
		;start link
		func_path sys_link, link
		f_call sys_task, start, {@_function_}, {r0, r5}
		f_call sys_cpu, id, {}, {r6}

		;allocate params message
		f_call sys_mail, alloc, {}, {r7}

		;fill in destination
		(vp-cpy-ri r5 r0 msg_dest + id_mbox)
		(vp-cpy-ri r6 r0 msg_dest + id_cpu)

		;fill in paramaters and set length
		f_call sys_string, copy, {$link_path, &[r7 + msg_data]}, {_, r1}
		(vp-dec r1)
		f_call sys_string, copy, {[r14], r1}, {_, r1}
		(vp-sub-rr r7 r1)
		(vp-cpy-ri r1 r7 msg_length)

		;send to link task
		f_call sys_mail, send, {r7}
	endif
	(vp-ret)

link_path:
	(vp-string "/tmp/") (vp-byte 0)

	align 8, db 0
options_table:
	dq	opt_cpu - options_table
		db	'-cpu', 0
		align 8, db 0
	dq	opt_run - options_table
		db	'-run', 0
		align 8, db 0
	dq	opt_link - options_table
		db	'-l', 0
		align 8, db 0
	dq	0

(def-func-end)
