(import 'inc/func.inc)
(import 'inc/list.inc)

(def-func 'sys/list_init)
	;inputs
	;r0 = list head
	;trashes
	;r1

	(lh-init r0 r1)
	(vp-ret)

(def-func-end)

(def-func 'sys/list_index_of)
	;inputs
	;r0 = list head
	;r1 = list node
	;outputs
	;r0 = -1, else index
	;r1 = list node
	;trashes
	;r2, r3

	(lh-get-head r0 0 r2)
	(vp-xor-rr r0 r0)
	(loop-start)
		(vp-cpy-rr r2 r3)
		(ln-get-succ r2 0 r2)
		(vpif '(r2 == 0))
			(vp-cpy-cr -1 r0)
			(vp-ret)
		(endif)
		(breakif '(r3 == r1))
		(vp-add-cr 1 r0)
	(loop-end)
	(vp-ret)

(def-func-end)

(def-func 'sys/list_node_at)
	;inputs
	;r0 = list head
	;r1 = index
	;outputs
	;r0 = 0, else list node
	;trashes
	;r1, r2

	(lh-get-head r0 0 r2)
	(loop-start)
		(vp-cpy-rr r2 r0)
		(ln-get-succ r2 0 r2)
		(vpif '(r2 == 0))
			(vp-xor-rr r0 r0)
			(vp-ret)
		(endif)
		(breakif '(r1 == 0))
		(vp-sub-cr 1 r1)
	(loop-end)
	(vp-ret)

(def-func-end)
