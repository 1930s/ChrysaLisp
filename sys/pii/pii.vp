(import 'sys/func.inc)
(import 'sys/string.inc)
(import 'sys/load.inc)
(import 'class/string/string.inc)
(import 'sys/pii/syscall.inc)

(def-func 'sys/pii/exit)
	;inputs
	;r0 = code

	(f-entry 'pii 'exit '(r0))
	(sys-exit '(r0))

(def-func-end)

(def-func 'sys/pii/open)
	;inputs
	;r0 = filename
	;r1 = mode
	;r2 = flags
	;outputs
	;r0 = fd
	;trashes
	;none

	(f-entry 'pii 'open '(r0 r1 r2))
	(sys-push-trashed r1 r2)
	(sys-open '(r0 r1 r2) '(r0))
	(sys-pop-trashed r1 r2)
	(f-exit 'pii 'open '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/close)
	;inputs
	;r0 = fd
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'close '(r0))
	(sys-push-trashed)
	(sys-close '(r0) '(r0))
	(sys-pop-trashed)
	(f-exit 'pii 'close '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/write_num)
	;inputs
	;r0 = fd
	;r1 = number
	;r2 = base
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'write_num '(r0 r1 r2))
	(sys-push-trashed r1 r2 r3 r4)
	(vp-cpy-rr r2 r3)
	(vp-swp-rr r0 r1)
	(vp-cpy-rr rsp r4)	;stack location
	(loop-start)
		(vp-xor-rr r2 r2)
		(vp-div-rrr r3 r2 r0)
		(vp-push r2)
	(loop-until '(r0 == 0))
	(loop-start)
		(vp-pop r0)
		(vp-add-cr (code "0") r0)
		(vpif '(r0 > (code "9")))
			(vp-add-cr (sub (code "A") (code ":")) r0)
		(endif)
		(vp-push r1)
		(vp-cpy-rr r0 r2)
		(sys-write-char '(r1 r2) '(_))
		(vp-pop r1)
	(loop-until '(rsp == r4))
	(sys-pop-trashed r1 r2 r3 r4)
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/write_char)
	;inputs
	;r0 = fd
	;r1 = char
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'write_char '(r0 r1))
	(sys-push-trashed r1)
	(sys-write-char '(r0 r1) '(r0))
	(sys-pop-trashed r1)
	(f-exit 'pii 'write_char '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/write)
	;inputs
	;r0 = fd
	;r1 = buffer
	;r2 = length
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'write '(r0 r1 r2))
	(sys-push-trashed r1 r2)
	(sys-write '(r0 r1 r2) '(r0))
	(sys-pop-trashed r1 r2)
	(f-exit 'pii 'write '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/write_str)
	;inputs
	;r0 = fd
	;r1 = string
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'write_str '(r0 r1))
	(sys-push-trashed r1 r3)
	(vp-cpy-rr r0 r3)
	(f-call 'sys_string 'length '(r1) '(r0 r1))
	(sys-write '(r3 r0 r1) '(r0))
	(sys-pop-trashed r1 r3)
	(f-exit 'pii 'write_str '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/age)
	;inputs
	;r0 = function name
	;outputs
	;r0 = 0 if error, else modified date
	;trashes
	;none

	(f-entry 'pii 'age '(r0))
	(sys-push-trashed r1)
	(f-bind 'sys_load 'statics r1)
	(vp-cpy-ir r1 ld_statics_stat_buffer r1)
	(sys-stat '(r0 r1) '(r0))
	(vpif '(r0 != 0))
		(vp-xor-rr r0 r0)
	(else)
		(f-bind 'sys_load 'statics r1)
		(vp-cpy-ir r1 ld_statics_stat_buffer r1)
		(vp-cpy-ir r1 stat_mtime r0)
	(endif)
	(sys-pop-trashed r1)
	(f-exit 'pii 'age '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/time)
	;outputs
	;r0 = time in usec
	;trashes
	;none

	(sys-push-trashed r1)
	(vp-alloc timeval_size)
	(sys-gettimeofday '(rsp 0))
	(vp-cpy-ir rsp timeval_sec r0)
	(vp-mul-cr 1000000 r0)
	(vp-cpy-ir rsp timeval_usec r1)
	(vp-add-rr r1 r0)
	(vp-free timeval_size)
	(sys-pop-trashed r1)
	(f-exit 'pii 'time '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/mmap)
	;inputs
	;r0 = address
	;r1 = len
	;r2 = prot
	;r3 = flags
	;r4 = fd
	;r5 = pos
	;outputs
	;r0 = buffer
	;trashes
	;none

	(f-entry 'pii 'mmap '(r0 r1 r2 r3 r4 r5))
	(sys-push-trashed r1 r2 r3 r4 r5)
	(sys-mmap '(r0 r1 r2 r3 r4 r5) '(r0))
	(sys-pop-trashed r1 r2 r3 r4 r5)
	(f-exit 'pii 'mmap '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/munmap)
	;inputs
	;r0 = buffer
	;r1 = size
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'munmap '(r0 r1))
	(sys-push-trashed r1)
	(sys-munmap '(r0 r1) '(r0))
	(sys-pop-trashed r1)
	(f-exit 'pii 'munmap '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/mprotect)
	;inputs
	;r0 = buffer
	;r1 = size
	;r2 = prot
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'mprotect '(r0 r1 r2))
	(sys-push-trashed r1 r2)
	(sys-mprotect '(r0 r1 r2) '(r0))
	(sys-pop-trashed r1 r2)
	(f-exit 'pii 'mprotect '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/read)
	;inputs
	;r0 = fd
	;r1 = buffer
	;r2 = size
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'read '(r0 r1 r2))
	(sys-push-trashed r1 r2)
	(sys-read '(r0 r1 r2) '(r0))
	(sys-pop-trashed r1 r2)
	(f-exit 'pii 'read '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/read_char)
	;inputs
	;r0 = fd
	;outputs
	;r0 = char
	;trashes
	;none

	(f-entry 'pii 'read_char '(r0))
	(sys-push-trashed)
	(sys-read-char '(r0) '(r0))
	(sys-pop-trashed)
	(f-exit 'pii 'read_char '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/ftruncate)
	;inputs
	;r0 = fd
	;r1 = size
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'ftruncate '(r0 r1))
	(sys-push-trashed r1)
	(sys-ftruncate '(r0 r1) '(r0))
	(sys-pop-trashed r1)
	(f-exit 'pii 'ftruncate '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/unlink)
	;inputs
	;r0 = filename
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'unlink '(r0))
	(sys-push-trashed)
	(sys-unlink '(r0) '(r0))
	(sys-pop-trashed)
	(f-exit 'pii 'unlink '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/stat)
	;inputs
	;r0 = filename
	;r1 = stat buf
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'stat '(r0 r1))
	(sys-push-trashed r1)
	(sys-stat '(r0 r1) '(r0))
	(sys-pop-trashed r1)
	(f-exit 'pii 'stat '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/pii/fcntl)
	;inputs
	;r0 = fd
	;r1 = command
	;r2 = arg
	;outputs
	;r0 = error code
	;trashes
	;none

	(f-entry 'pii 'fcntl '(r0 r1 r2))
	(sys-push-trashed r1 r2)
	(sys-fcntl '(r0 r1 r2) '(r0))
	(sys-pop-trashed r1 r2)
	(f-exit 'pii 'fcntl '(r0))
	(vp-ret)

(def-func-end)
