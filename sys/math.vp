(import 'inc/func.inc)
(import 'inc/task.inc)
(import 'inc/math.inc)

(def-func 'sys/math_random)
	;inputs
	;r0 = random range
	;outputs
	;r0 = random number in range
	;trashes
	;r1-r2

	(f-entry 'sys_math 'random '(r0))
	(vp-cpy-rr r0 r1)
	(vp-cpy-pr 'seed r0)
	(vp-mul-cr 17 r0)
	(vp-cpy-cr 0xa5a5a5a5a5a5a5a5 r2)
	(vp-xor-rr r2 r0)
	(vp-cpy-rp r0 'seed)
	(vp-xor-rr r2 r2)
	(vp-div-rrr r1 r2 r0)
	(vp-cpy-rr r2 r0)
	(f-exit 'sys_math 'random '(r0))
	(vp-ret)

	(vp-align ptr_size)
(vp-label 'seed)
	(vp-long 1234567890)

(def-func-end)

(def-func 'sys/math_isqrt)
	;inputs
	;r0 = number
	;outputs
	;r0 = sqrt
	;trashes
	;r1-r3

	(f-entry 'sys_math 'isqrt '(r1))

	(vp-xor-rr r0 r0)
	(vp-cpy-cr 0x4000000000000000 r2)
	(loop-while '(r2 > r1))
		(vp-shr-cr 2 r2)
	(loop-end)
	(loop-while '(r2 != 0))
		(vp-lea-d r0 r2 r3)
		(vpif '(r1 > r3))
			(vp-cpy-rr r2 r3)
			(vp-sub-rr r0 r1)
			(vp-shl-cr 1 r3)
			(vp-sub-rr r2 r1)
			(vp-add-rr r3 r0)
		(endif)
		(vp-shr-cr 1 r0)
		(vp-shr-cr 2 r2)
	(loop-end)
	(vpif '(r1 > r0))
		(vp-add-cr 1 r0)
	(endif)

	(f-exit 'sys_math 'isqrt '(r0))
	(vp-ret)

(def-func-end)
