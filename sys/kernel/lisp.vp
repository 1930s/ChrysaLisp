(include 'sys/func.inc)
(include 'sys/kernel/class.inc)
(include 'class/integer/class.inc)
(include 'class/string/class.inc)
(include 'class/lisp/class.inc)

(def-method 'sys_kernel 'lisp_total)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(vp-def (this args value len) '(r3 r4))

	(entry 'sys_kernel 'lisp_total (list this args))

(errorcases
	(d-call 'vector 'get_length (list args) (list '_ len))
	(errorif (list len '!= 0) 'error1))

	(call 'sys_kernel 'total nil (list value))
	(call 'integer 'create (list value) (list value))

	(exit 'sys_kernel 'lisp_total (list this value))
	(vp-ret)

(errorcases
(vp-label 'error1)
	(jump 'lisp 'repl_error (list this "(kernel-total)" error_msg_wrong_types args)))

(def-func-end)

(def-method 'sys_kernel 'lisp_declare)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0 'arg1)

	(push-scope)
	(entry 'sys_kernel 'lisp_declare {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2} {value})
	(errorifnot {value} 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'sys_kernel 'declare {&arg0->string_data, arg1})
	(call 'obj 'ref {arg0} {value})

(vp-label 'funcexit)
	(exit 'sys_kernel 'lisp_declare {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(kernel-declare name mbox)", error_msg_wrong_types, args} {_, value})
	(goto 'funcexit)
	(signature 'sig 'string 'integer))

	(pop-scope-syms)

(def-func-end)

(def-method 'sys_kernel 'lisp_debug)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(ulong 'arg0)

	(push-scope)
	(entry 'sys_kernel 'lisp_debug {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 1} {value})
	(errorifnot {value} 'error1))

	(call 'lisp 'env_args_set {args, &arg0, 0})
	(call 'sys_kernel 'debug {&arg0->string_data})
	(call 'obj 'ref {arg0} {value})

(vp-label 'funcexit)
	(exit 'sys_kernel 'lisp_debug {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(kernel-debug str)", error_msg_wrong_types, args} {_, value})
	(goto 'funcexit)
	(signature 'sig 'string))

	(pop-scope-syms)

(def-func-end)
