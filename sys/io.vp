(import 'sys/func.inc)
(import 'sys/syscall.inc)
(import 'sys/string.inc)
(import 'sys/load.inc)
(import 'sys/task.inc)
(import 'class/string/string.inc)

(def-func 'sys/io_open)
	;inputs
	;r0 = filename
	;r1 = mode
	;r2 = flags
	;outputs
	;r0 = fd

	(f-entry 'sys_io 'open '(r0 r1 r2))
	(sys-push-trashed)
	(sys-open '(r0 r1 r2) '(r0))
	(sys-pop-trashed)
	(f-exit 'sys_io 'open '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/io_close)
	;inputs
	;r0 = fd

	(f-entry 'sys_io 'close '(r0))
	(sys-push-trashed)
	(sys-close '(r0) '(_))
	(sys-pop-trashed)
	(vp-ret)

(def-func-end)

(def-func 'sys/io_read_line)
	;inputs
	;r0 = buffer address
	;r1 = buffer size
	;r2 = fd
	;outputs
	;r0 = chars read
	;trashes
	;r0-r3, r4

	(f-entry 'sys_io 'read '(r0 r1 r2))
	(vp-cpy-rr r0 r3)
	(vp-cpy-rr r0 r4)
	(vp-add-rr r0 r1)
	(loop-while '(r4 != r1))
		(sys-push-trashed)
		(sys-read-char '(r2) '(r0))
		(sys-pop-trashed)
		(vp-cpy-ri-b r0 r4 0)
		(vp-add-cr byte_size r4)
	(loop-until '(r0 == char_lf))
	(vp-cpy-rr r4 r0)
	(vp-sub-rr r3 r0)
	(f-exit 'sys_io 'read '(r0))
	(vp-ret)

(def-func-end)

(def-func 'sys/io_write_char)
	;inputs
	;r0 = char
	;r1 = fd
	;trashes
	;r0

	(f-entry 'sys_io 'char '(r0 r1))
	(sys-push-trashed)
	(sys-write-char '(r1 r0) '(_))
	(sys-pop-trashed)
	(vp-ret)

(def-func-end)

(def-func 'sys/io_write_str)
	;inputs
	;r0 = string
	;r1 = fd
	;trashes
	;r0-r3

	(f-entry 'sys_io 'string '(r0 r3))
	(f-call 'sys_string 'length '(r0) '(r0 r1))
	(sys-push-trashed)
	(sys-write-string '(r3 r0 r1) '(_))
	(sys-pop-trashed)
	(vp-ret)

(def-func-end)

(def-func 'sys/io_write_num)
	;inputs
	;r0 = number
	;r1 = fd
	;r2 = base
	;trashes
	;r0, r2-r3, r4

	(f-entry 'sys_io 'number '(r0 r1 r3))
	(vp-cpy-rr rsp r4)	;stack location
	(loop-start)
		(vp-xor-rr r2 r2)
		(vp-div-rrr r3 r2 r0)
		(vp-push r2)
	(loop-until '(r0 == 0))
	(loop-start)
		(vp-pop r0)
		(vp-add-cr (code "0") r0)
		(vpif '(r0 > (code "9")))
			(vp-add-cr (sub (code "A") (code ":")) r0)
		(endif)
		(sys-push-trashed)
		(sys-write-char '(r1 r0) '(_))
		(sys-pop-trashed)
	(loop-until '(r4 == rsp))
	(vp-ret)

(def-func-end)

(def-func 'sys/io_debug_long)
	;inputs
	;r0 = info string
	;r1 = debug string
	;r2 = debug int
	;trashes
	;r0-r3, r4

	(def-struct 'local)
		(ptr 'info)
		(ptr 'string)
		(long 'long)
	(def-struct-end)

	;save inputs
	(vp-alloc-stack local_size)
	(f-entry 'sys_io 'debug_long '((rsp local_info) (rsp local_string) (rsp local_long)))

	(f-call 'sys_io 'string '((rsp local_info) 2))
	(f-call 'sys_io 'char '((code " ") 2))
	(f-call 'sys_io 'string '((rsp local_string) 2))
	(f-call 'sys_io 'string '(" :-> 0x" 2))
	(f-call 'sys_io 'number '((rsp local_long) 2 16))
	(f-call 'sys_io 'char '(char_lf 2))

	(vp-free-stack local_size)
	(vp-ret)

(def-func-end)

(def-func 'sys/io_debug_str)
	;inputs
	;r0 = info string
	;r1 = debug string
	;r2 = debug string
	;trashes
	;r0-r3, r4

	(def-struct 'local)
		(ptr 'info)
		(ptr 'string)
		(long 'str)
	(def-struct-end)

	;save inputs
	(vp-alloc-stack local_size)
	(f-entry 'sys_io 'debug_str '((rsp local_info) (rsp local_string) (rsp local_str)))

	(f-call 'sys_io 'string '((rsp local_info) 2))
	(f-call 'sys_io 'char '((code " ") 2))
	(f-call 'sys_io 'string '((rsp local_string) 2))
	(f-call 'sys_io 'string '(" :-> " 2))
	(f-call 'sys_io 'string '((rsp local_str) 2))
	(f-call 'sys_io 'char '(char_lf 2))

	(vp-free-stack local_size)
	(vp-ret)

(def-func-end)

(def-func 'sys/io_age)
	;inputs
	;r0 = function name
	;outputs
	;r0 = 0 if error, else modified date
	;trashes
	;r0-r2

	;save filename
	(f-entry 'sys_io 'age '(r2))

	;get file data
	(f-bind 'sys_load 'statics r1)
	(vp-cpy-ir r1 ld_statics_stat_buffer r1)
	(sys-push-trashed)
	(sys-stat '(r2 r1) '(r0))
	(sys-pop-trashed)
	(vpif '(r0 != 0))
		(vp-xor-rr r0 r0)
		(vp-ret)
	(endif)

	;get file modified date
	(f-exit 'sys_io 'age '((r1 stat_mtime)))
	(vp-ret)

(def-func-end)
