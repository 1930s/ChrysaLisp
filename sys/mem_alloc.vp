(import 'inc/func.inc)
(import 'inc/heap.inc)

(def-func 'sys/mem_alloc)
	;inputs
	;r0 = minimum amount in bytes
	;outputs
	;r0 = 0 if failed, else address
	;r1 = 0 if failed, else size given
	;trashes
	;r2-r3

	(vpif '(r0 > mem_block_max_size - ptr_size))
		;error
		(vp-xor-rr r0 r0)
		(vp-xor-rr r1 r1)
		(vp-ret)
	(endif)
	(vp-lea-ir r0 ptr_size r1)		;extra bytes for heap pointer

	;find object heap
	(f-bind 'sys_mem 'statics r0)
	(vp-add-cr long_size r0)
	(loop-while '(r1 > (r0 hp_heap_cellsize)))
		(vp-add-cr hp_heap_size r0)
	(loop-end)

	;allocate object from this heap
	(f-call 'sys_heap 'alloc '(r0) '(r1))
	(vp-cpy-ri r0 r1)
	(vp-xchg-rr r0 r1)
	(vp-cpy-ir r1 hp_heap_cellsize r1)
	(vp-add-cr ptr_size r0)
	(vp-sub-cr ptr_size r1)
	(vp-ret)

(def-func-end)
