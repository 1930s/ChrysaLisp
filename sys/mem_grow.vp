(import 'inc/func.inc)

(def-func 'sys/mem_grow)
	;inputs
	;r0 = array
	;r1 = array size
	;r2 = new array size
	;outputs
	;r0 = new array
	;r1 = new array size
	;trashes
	;r2-r3, r5-r8

	(vp-cpy-rr r0 r5)
	(vp-cpy-rr r1 r6)
	if r2, >, r1
		;alloc new table
		(f-call 'sys_mem 'alloc '(r2) '(r0, _))
		assert r0, !=, 0
		(vp-cpy-rr r0 r7)
		(vp-cpy-rr r1 r8)

		;clear it to empty
		(f-call 'sys_mem 'clear '(r0, r1) '(_))

		if r6, !=, 0
			;copy over old data
			(f-call 'sys_mem 'copy '(r5, r7, r6) '(_, _))

			;free existing
			(f-call 'sys_mem 'free '(r5))
		endif

		;save new table
		(vp-cpy-rr r7 r0)
		(vp-cpy-rr r8 r1)
	endif
	(vp-ret)

(def-func-end)
