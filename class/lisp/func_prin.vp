(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/string/string.inc)
(import 'class/stream/stream.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_prin)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'elem)
	(union '(pptr 'iter_end) '(ptr 'args))
	(union '(pptr 'iter_begin) '(uint 'length))

	(push-scope)
	(f-entry 'lisp 'func_prin {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(vpif {length})
		(f-call 'vector 'get_begin {args} {_, iter_begin})
		(f-call 'vector 'get_end {args} {_, iter_end})
		(loop-start)
			(assign {*iter_begin} {elem})
			(vpif (cat {elem->obj_vtable == @} (f-path 'class 'string)))
				(f-call 'stream 'write {this->lisp_stdout, &elem->string_data, elem->string_length})
			(else)
				(f-call 'lisp 'repl_print {this, this->lisp_stdout, elem})
			(endif)
			(assign {iter_begin + ptr_size} {iter_begin})
		(loop-until {iter_begin == iter_end})
		(assign {iter_end[-ptr_size]} {args})
	(else)
		(assign {this->lisp_sym_nil} {args})
	(endif)
	(f-call 'ref 'ref {args})

	(f-exit 'lisp 'func_prin {this, args})
	(pop-scope)
	(return)

(def-func-end)
