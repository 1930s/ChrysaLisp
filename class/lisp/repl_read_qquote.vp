(import 'inc/func.inc)
(import 'class/class_stream.inc)
(import 'class/class_vector.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/repl_read_qquote)
	;inputs
	;r0 = lisp object
	;r1 = stream
	;r2 = next char
	;outputs
	;r0 = lisp object
	;r1 = list
	;r2 = next char

	(ptr 'this 'stream 'list 'elem)
	(ulong 'char)

	(push-scope)
	(retire '(r0, r1, r2) '(this, stream, char))

	;skip "`"
	(func-call 'stream 'read_char '(stream) '(char))

	(func-call 'vector 'create '() '(list))
	(assign '(this -> lisp_sym_qquote) '(elem))
	(func-call 'ref 'ref '(elem))
	(func-call 'vector 'push_back '(list, elem))
	(func-call 'lisp 'repl_read '(this, stream, char) '(elem, char))
	(vpif '((elem -> obj_vtable != @class/class_error)))
		(func-call 'vector 'push_back '(list, elem))
	(else)
		(func-call 'ref 'deref '(list))
		(assign '(elem) '(list))
	(endif)

	(eval '(this, list, char) '(r0, r1, r2))
	(pop-scope)
	(return)

(def-func-end)
