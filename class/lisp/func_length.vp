(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/boxed_long/boxed_long.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_length)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = else value

	(ptr 'this 'args 'value)
	(ulong 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(errorif {length != 1} 'error1)
	(f-call 'vector 'get_element {args, 0} {args})
	(f-call 'obj 'inst_of (cat {args, @} (f-path 'class 'sequence)) {value})
	(errorifnot {value} 'error2)
	(v-call 'sequence 'get_length {args} {length})
	(f-call 'boxed_long 'create {} {value})
	(f-call 'boxed_long 'set_value {value, length})

(vp-label 'exit)
	(assign {this, value} '(r0 r1))
	(return)

(errorcases
(vp-label 'error1)
	(assign {"(length seq) wrong number of args"} {value})
	(goto 'error)
(vp-label 'error2)
	(assign {"(length seq) not a sequence"} {value})
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, value, args} {value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
