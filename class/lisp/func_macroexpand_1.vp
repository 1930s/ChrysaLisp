(import 'inc/func.inc)
(import 'class/class_unordered_map.inc)
(import 'class/class_pair.inc)
(import 'class/class_vector.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_macroexpand_1)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value
	;r2 = 0 if expanded

	(ptr 'this 'args 'value)
	(ulong 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(devirt-call 'vector 'get_length {args} {length})
	if (length == 1)
		(func-call 'lisp 'func_copy {this, args} {value})
		(func-call 'lisp 'repl_expand {this, & value} {length})
	(else)
		(func-call 'error 'create {"(macroexpand-1 form) wrong number of args", args} {value})
		(assign {1} {length})
	(endif)

	(assign {this, value, length} '(r0 r1 r2))
	(pop-scope)
	(return)

(def-func-end)
