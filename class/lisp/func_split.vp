(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/string/string.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_split)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'str 'value)
	(uint 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length == 2})
		(f-call 'vector 'get_element {args, 0} {str})
		(vpif {str->obj_vtable == @class/class_string})
			(f-call 'vector 'get_element {args, 1} {value})
			(gotoif {value->obj_vtable != @class/class_string} 'error)
			(f-call 'string 'split {str, ubyte (value->string_data)} {value})
		(else)
		(vp-label 'error)
			(f-call 'lisp 'repl_error {this, "(split str char) not a string", args} {value})
		(endif)
	(else)
		(f-call 'lisp 'repl_error {this, "(split str char) wrong number of args", args} {value})
	(endif)

	(assign {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
