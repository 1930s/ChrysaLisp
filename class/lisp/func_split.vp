(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/string/string.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_split)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'str 'value)
	(uint 'length)

	(push-scope)
	(f-entry 'lisp 'func_split {this, args})

	(d-call 'vector 'get_length {args} {length})
	(errorif {length != 2} 'error1)
	(f-call 'vector 'get_element {args, 0} {str})
	(errorif (cat {str->obj_vtable != @} (f-path 'class 'string)) 'error2)
	(f-call 'vector 'get_element {args, 1} {value})
	(errorif (cat {value->obj_vtable != @} (f-path 'class 'string)) 'error2)
	(f-call 'string 'split {str, ubyte (value->string_data)} {value})

(vp-label 'exit)
	(f-exit 'lisp 'func_split {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(assign {"(split str char) wrong number of args"} {value})
	(goto 'error)
(vp-label 'error2)
	(assign {"(split str char) not a string"} {value})
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, value, args} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
