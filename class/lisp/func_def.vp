(import 'inc/func.inc)
(import 'class/class_vector.inc)
(import 'class/class_unordered_map.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_def)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'var 'val 'env)
	(uint 'length 'index)

	(push-scope)
	(retire '(r0, r1) '(this, args))

	(devirt-call 'vector 'get_length '(args) '(length))
	(vpif '((length >= 3 && (length & 1))))
		(func-call 'vector 'get_element '(args, 0) '(env))
		(vpif '((env -> obj_vtable == @class/class_unordered_map)))
			(assign '(1, 0) '(index, val))
			(loop-start)
				(func-call 'ref 'deref_if '(val))
				(func-call 'vector 'get_element '(args, index) '(var))
				(devirt-call 'vector 'ref_element '(args, index + 1) '(val))
				(func-call 'unordered_map 'insert '(env, var, val) '(_, _))
				(assign '(index + 2) '(index))
			(loop-until '((index == length)))
		(else)
			(func-call 'error 'create '("(def env var val ... ) not an enviroment", args) '(val))
		(endif)
	(else)
		(func-call 'error 'create '("(def env var val ... ) wrong numbers of args", args) '(val))
	(endif)

	(expr '(this, val) '(r0, r1))
	(pop-scope)
	(return)

(def-func-end)
