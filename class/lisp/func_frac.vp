(import 'sys/func.inc)
(import 'sys/math/math.inc)
(import 'class/boxed_long/boxed_long.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_frac)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = else value

	(ptr 'this 'value)
	(union
		'(ptr 'args)
		'(long 'num))

	(push-scope)
	(f-entry 'lisp 'func_frac {this, args})

(errorcases
	(f-call 'lisp 'env_args_type {this, args, $sig, 1} {_, value})
	(errorifnot {value} 'error1))

	(f-call 'vector 'get_first {args} {_, value})
	(f-call 'boxed_long 'get_value {value} {_, num})
	(vec-set 0)
	(vec-load 1 {num})
	(vec-frac 1)
	(vec-store 1 {num})
	(f-call 'boxed_long 'create {num} {value})

(vp-label 'exit)
	(f-exit 'lisp 'func_frac {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(frac num)", error_msg_wrong_types, args} {_, value})
	(goto 'exit)
	(signature 'sig 'boxed_long))

	(pop-scope-syms)

(def-func-end)
