(import 'inc/func.inc)
(import 'class/pair/pair.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/env_set)
	;inputs
	;r0 = lisp object
	;r1 = symbol
	;r2 = value
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'symbol 'value)
	(pptr 'iter)

	(push-scope)
	(f-entry 'lisp 'env_set {this, symbol, value})

	(f-call 'lisp 'env_find {this, symbol} {_, iter, _})
	(errorifnot {iter} 'error)
	(f-call 'ref 'ref {value})
	(f-call 'ref 'ref {value})
	(f-call 'pair 'set_second {*iter, value})

(vp-label 'exit)
	(f-exit 'lisp 'env_set {this, value})
	(return)

(errorcases
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, "symbol not bound", 0, symbol} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
