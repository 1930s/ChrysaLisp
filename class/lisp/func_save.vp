(import 'sys/func.inc)
(import 'class/string/string.inc)
(import 'class/boxed_long/boxed_long.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_save)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)
	(union
		'(pptr 'iter_begin)
		'(ulong 'handle)
		'(ptr 'name))

	(push-scope)
	(f-entry 'lisp 'func_save {this, args})

(errorcases
	(f-call 'lisp 'env_args_type {this, args, $sig, 2} {_, value})
	(errorifnot {value} 'error1))

	(f-call 'vector 'get_begin {args} {_, iter_begin})
	(assign {iter_begin[0], iter_begin[ptr_size]} {value, name})
	(f-call 'pii 'open {&name->string_data, o_creat | o_rdwr | o_trunc, s_irusr | s_iwusr | s_irgrp | s_iroth} {handle})
	(errorif {handle < 3} 'error2)
	(f-call 'pii 'write {handle, &value->string_data, value->string_length})
	(f-call 'pii 'close {handle})
	(f-call 'obj 'ref {value})

(vp-label 'exit)
	(f-exit 'lisp 'func_save {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(save str filename)", error_msg_wrong_types, args} {_, value})
(vp-label 'error2)
	(f-call 'lisp 'repl_error {this, "(save str filename)", error_msg_open_error, args} {_, value})
	(goto 'exit)
	(signature 'sig 'string 'string))

	(pop-scope-syms)

(def-func-end)
