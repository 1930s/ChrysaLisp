(import 'inc/func.inc)
(import 'class/unordered_set/unordered_set.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/sym_intern)
	;inputs
	;r0 = lisp object
	;r1 = symbol object
	;outputs
	;r0 = lisp object
	;r1 = interned symbol

	(ptr 'this 'symbol)
	(pptr 'iter)

	(push-scope)
	(f-entry 'lisp 'sym_intern {this, symbol})

	(f-call 'unordered_set 'insert {this->lisp_symbols, symbol} {iter, _})
	(f-call 'ref 'deref {symbol})
	(assign {*iter} {symbol})
	(f-call 'ref 'ref {symbol})

	(f-exit 'lisp 'sym_intern {this, symbol})
	(pop-scope)
	(return)

(def-func-end)
