(import 'sys/func.inc)
(import 'class/string/class.inc)
(import 'class/lisp/class.inc)

(def-method 'lisp 'func_load)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)

	(push-scope)
	(entry 'lisp 'func_load {this, args})

(errorcases
	(call 'lisp 'env_args_type {this, args, $sig, 1} {_, value})
	(errorifnot {value} 'error1))

	(call 'vector 'get_first {args} {_, value})
	(call 'string 'create_from_file {&value->string_data} {value})
	(vpifnot {value})
		(call 'obj 'ref {this->lisp_sym_nil} {value})
	(endif)

(vp-label 'funcexit)
	(exit 'lisp 'func_load {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(load path)", error_msg_wrong_types, args} {_, value})
	(goto 'funcexit)
	(signature 'sig 'string))

	(pop-scope-syms)

(def-func-end)
