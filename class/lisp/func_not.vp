(import 'inc/func.inc)
(import 'class/class_vector.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_not)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args)
	(ulong 'length)

	(push-scope)
	(retire '(r0, r1) '(this, args))

	(devirt-call 'vector 'get_length '(args) '(length))
	(vpif '((length == 1)))
		(func-call 'vector 'get_element '(args, 0) '(args))
		(vpif '((args == this -> lisp_sym_nil)))
			(assign '(this -> lisp_sym_t) '(args))
		(else)
			(assign '(this -> lisp_sym_nil) '(args))
		(endif)
		(func-call 'ref 'ref '(args))
	(else)
		(func-call 'error 'create '("(not form) wrong number of args", args) '(args))
	(endif)

	(eval '(this, args) '(r0, r1))
	(pop-scope)
	(return)

(def-func-end)
