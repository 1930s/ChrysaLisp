(import 'inc/func.inc)
(import 'class/class_vector.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_progn)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args)
	(ulong 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length})
		(d-call 'vector 'ref_element {args, length - 1} {args})
	(else)
		(assign {this->lisp_sym_nil} {args})
		(f-call 'ref 'ref {args})
	(endif)

	(assign {this, args} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
