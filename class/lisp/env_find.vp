(import 'inc/func.inc)
(import 'class/class_unordered_map.inc)
(import 'class/class_pair.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/env_find)
	;inputs
	;r0 = lisp object
	;r1 = symbol
	;outputs
	;r0 = lisp object
	;r1 = 0, else iterator
	;r2 = bucket vector

	(ptr 'this 'symbol 'bucket 'env)
	(pptr 'iter)

	(push-scope)
	(retire '(r0, r1) {this, symbol})

	(assign {this -> lisp_enviroment} {env})
	(loop-start)
		(func-call 'unordered_map 'find {env, symbol} {iter, bucket})
		(breakif {iter})
		(func-call 'unordered_map 'find {env, this -> lisp_sym_parent} {iter, bucket})
		(breakifnot {iter})
		(func-call 'pair 'get_second {* iter} {env})
	(loop-end)

	(expr {this, iter, bucket} '(r0, r1, r2))
	(pop-scope)
	(return)

(def-func-end)
