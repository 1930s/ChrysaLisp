(import 'sys/func.inc)
(import 'class/stream/stream.inc)
(import 'class/symbol/symbol.inc)
(import 'class/integer/integer.inc)
(import 'class/pair/pair.inc)
(import 'class/hash_map/hash_map.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/read_char)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = stream object (ptr)
	;r2 = last char (uint)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = next char (uint)

	(ptr 'this 'stream 'line)
	(pptr 'iter)
	(ulong 'char)

	(push-scope)
	(f-entry 'lisp 'read_char {this, stream, char})

	(vpif {char == char_lf})
		(f-call 'hash_map 'search {this->lisp_environment, this->lisp_sym_stream_line} {_, iter, _})
		(breakifnot {iter})
		(f-call 'pair 'get_second {*iter} {_, line})
		(assign {line->function_value + 1} {line->function_value})
	(endif)

	(f-call 'stream 'read_char {stream} {_, char})

	(f-exit 'lisp 'read_char {this, char})
	(pop-scope)
	(return)

(def-func-end)
