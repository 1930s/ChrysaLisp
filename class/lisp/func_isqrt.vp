(import 'inc/func.inc)
(import 'inc/math.inc)
(import 'class/boxed_long/boxed_long.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_isqrt)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)
	(ulong 'accum)

	(push-scope)
	(f-entry 'lisp 'func_isqrt {this, args})

(errorcases
	(f-call 'lisp 'env_args_type (cat {this, args, $sig, 1}) {_, value})
	(errorifnot {value} 'error1))

	(f-call 'vector 'get_element {args, 0} {_, value})
	(f-call 'boxed_long 'get_value {value} '(_ r0))
	(errorif '(r0 < 0) 'error1)
	(f-call 'sys_math 'isqrt '(r0) {accum})
	(f-call 'boxed_long 'create {} {value})
	(f-call 'boxed_long 'set_value {value, accum})

(vp-label 'exit)
	(f-exit 'lisp 'func_isqrt {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(isqrt num)", error_msg_wrong_types, args} {_, value})
	(goto 'exit)
	(signature 'sig 'boxed_long))

	(pop-scope-syms)

(def-func-end)
