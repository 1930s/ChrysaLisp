(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/symbol/symbol.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_gensym)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'prefix 'value)
	(uint 'length)

	(push-scope)
	(f-entry 'lisp 'func_gensym {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(errorif {length} 'error)
	(f-call 'symbol 'create_from_long {this->lisp_nextsym, 10} {args})
	(f-call 'symbol 'create_from_cstr {"G"} {prefix})
	(f-call 'symbol 'append {prefix, args} {value})
	(f-call 'ref 'deref {prefix})
	(f-call 'ref 'deref {args})
	(f-call 'lisp 'sym_intern {this, value} {_, value})
	(assign {this->lisp_nextsym + 1} {this->lisp_nextsym})

(vp-label 'exit)
	(f-exit 'lisp 'func_gensym {this, value})
	(return)

(errorcases
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, "(gensym) wrong number of args", args} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
