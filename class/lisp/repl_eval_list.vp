(import 'sys/func.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/repl_eval_list)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = list vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'value)
	(pptr 'iter_begin 'iter_end)

	(push-scope)
	(f-entry 'lisp 'repl_eval_list {this, value})

	(f-call 'vector 'get_iters {value} {_, iter_begin, iter_end})
	(f-call 'obj 'ref {this->lisp_sym_nil} {value})
	(loop-while {iter_begin != iter_end})
		(f-call 'obj 'deref {value})
		(f-call 'lisp 'repl_eval {this, *iter_begin} {_, value})
		(errorif (cat {value->obj_vtable == @} (f-path 'error 'vtable)) 'exit)
		(f-call 'obj 'deref {*iter_begin})
		(f-call 'obj 'ref {value} {*iter_begin})
		(assign {iter_begin + ptr_size} {iter_begin})
	(loop-end)

(vp-label 'exit)
	(f-exit 'lisp 'repl_eval_list {this, value})
	(pop-scope)
	(return)

(def-func-end)
