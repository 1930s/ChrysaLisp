(include 'sys/func.inc)
(include 'class/lisp/class.inc)

(def-method 'lisp 'env_args_type)
	;inputs
	;r1 = args vector object (ptr) vector
	;r3 = type/sig pointer
	;r4 = - or 0 all same type check, else + for type signature check
	;outputs
	;r1 = 0 if error, else ok
	;trashes
	;r0-r5

	(entry 'lisp 'env_args_type '(r1 r3 r4))

	(d-call 'vector 'get_length '(r1) '(_ r1))
	(vpif '(r4 <= 0))
		(vp-mul-cr -1 r4)
		(errorif '(r1 < r4) 'error)
		(call 'vector 'get_iters '(r0) '(_ r4 r5))
		(loop-while '(r4 != r5))
			(call 'obj 'inst_of '((r4 0) r3) '(_ r1))
			(gotoif '(r1 == 0) 'funcexit)
			(vp-add-cr ptr_size r4)
		(loop-end)
	(else)
		(errorif '(r1 != r4) 'error)
		(call 'vector 'get_iters '(r0) '(_ r4 r5))
		(loop-while '(r4 != r5))
			(vp-cpy-ir-us r3 0 r1)
			(vp-cpy-dr r3 r1 r1)
			(call 'obj 'inst_of '((r4 0) r1) '(_ r1))
			(gotoif '(r1 == 0) 'funcexit)
			(vp-add-cr ptr_size r4)
			(vp-add-cr short_size r3)
		(loop-end)
	(endif)
	(vp-cpy-cr -1 r1)

(vp-label 'funcexit)
	(exit 'lisp 'env_args_type '(r1))
	(vp-ret)

(errorcases
(vp-label 'error)
	(vp-xor-rr r1 r1)
	(goto 'funcexit))

(def-func-end)
