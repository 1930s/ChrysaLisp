(import 'sys/func.inc)
(import 'class/unordered_map/unordered_map.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/env_bind)
	;inputs
	;r0 = lisp object
	;r1 = vars list
	;r2 = vals list
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'vars 'vals 'symbol 'value)
	(uint 'index_vars 'index_vals 'len_vars 'len_vals 'state)

	(push-scope)
	(f-entry 'lisp 'env_bind {this, vars, vals})

	(errorif (cat {vars->obj_vtable != @} (f-path 'class 'vector)) 'error1)
	(errorif (cat {vals->obj_vtable != @} (f-path 'class 'vector)) 'error2)
	(assign {0, 0, 0} {index_vars, index_vals, state})
	(f-call 'ref 'ref {this->lisp_sym_nil} {value})
	(d-call 'vector 'get_length {vars} {_, len_vars})
	(d-call 'vector 'get_length {vals} {_, len_vals})
	(loop-while {index_vars != len_vars})
		(f-call 'vector 'get_element {vars, index_vars} {_, symbol})
		(vpif {symbol == this->lisp_sym_rest})
			(assign {1, index_vars + 1} {state, index_vars})
		(elseif {symbol == this->lisp_sym_optional})
			(assign {2, index_vars + 1} {state, index_vars})
		(endif)
		(breakif {index_vars == len_vars})
		(f-call 'vector 'get_element {vars, index_vars} {_, symbol})
		(f-call 'ref 'deref {value})
		(errorif (cat {symbol->obj_vtable != @} (f-path 'class 'symbol)) 'error3)
		(vpif {state == 1})
			;rest
			(d-call 'vector 'slice {vals, index_vals, len_vals} {_, value})
			(assign {index_vars + 1, len_vals} {index_vars, index_vals})
		(elseif {state == 2})
			;optional
			(gotoif {index_vals != len_vals} 'normal)
			(f-call 'ref 'ref {this->lisp_sym_nil} {value})
			(assign {index_vars + 1} {index_vars})
		(else)
			;normal
			(errorif {index_vals == len_vals} 'error)
		(vp-label 'normal)
			(d-call 'vector 'ref_element {vals, index_vals} {_, value})
			(assign {index_vars + 1, index_vals + 1} {index_vars, index_vals})
		(endif)
		(f-call 'unordered_map 'insert {this->lisp_environment, symbol, value})
	(loop-end)
	(errorif {index_vals != len_vals} 'error4)

(vp-label 'exit)
	(f-exit 'lisp 'env_bind {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(bind vars vals)", error_msg_not_a_list, vars} {_, value})
	(goto 'exit)
(vp-label 'error2)
	(f-call 'lisp 'repl_error {this, "(bind vars vals)", error_msg_not_a_list, vals} {_, value})
	(goto 'exit)
(vp-label 'error3)
	(f-call 'lisp 'repl_error {this, "(bind vars vals)", error_msg_not_a_symbol, vars} {_, value})
	(goto 'exit)
(vp-label 'error4)
	(f-call 'ref 'deref {value})
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, "(bind vars vals)", error_msg_wrong_num_of_args, vals} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
