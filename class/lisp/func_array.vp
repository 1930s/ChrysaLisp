(import 'inc/func.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_array)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = else value

	(ptr 'this 'args 'value)
	(pptr 'iter_begin)

	(push-scope)
	(f-entry 'lisp 'func_array {this, args})

	(f-call 'array 'create {} {value})
	(f-call 'array 'set_capacity {value, args->array_length})
	(assign {args->array_length} {value->array_length})
	(f-call 'array 'get_begin {value} {_, iter_begin})
	(f-call 'lisp 'env_args_set {this, args, iter_begin})

	(f-exit 'lisp 'func_array {this, value})
	(pop-scope)
	(return)

(def-func-end)
