(import 'inc/func.inc)
(import 'inc/load.inc)
(import 'class/class_vector.inc)
(import 'class/class_error.inc)
(import 'class/class_symbol.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_inst_of)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = else value

	(ptr this args class value)
	(ulong length)
	(pubyte name_offset)

	(push-scope)
	(retire '(r0 r1) {this args})

	(devirt-call 'vector 'get_length {args} {length})
	(vpif {length == 2})
		(func-call 'vector 'get_element {args 0} {class})
		(vpif {class -> obj_vtable == @class/class_symbol})
			(func-call 'sys_load 'bind {class -> string_data} {class})
			(gotoifnot {class} 'error)
			(func-call 'vector 'get_element {args, 1} {args})
			(func-call 'obj 'inst_of {args, class} {value})
			(vpif {value})
				(assign {value - 1} {name_offset})
				(assign {value - * name_offset} {value})
				(func-call 'lisp 'sym_intern_cstr {this, value} {value}) 
			(else)
				(assign {this -> lisp_sym_nil} {value})
				(func-call 'ref 'ref {value})
			(endif)
		(else)
		(vp-label 'error)
			(func-call 'error 'create {"(inst-of class obj) not a class", args} {value})
		(endif)
	(else)
		(func-call 'error 'create {"(inst-of class obj) wrong number of args", args} {value})
	(endif)

	(expr {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
