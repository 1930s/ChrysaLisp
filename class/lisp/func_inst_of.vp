(import 'inc/func.inc)
(import 'inc/load.inc)
(import 'class/vector/vector.inc)
(import 'class/symbol/symbol.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_inst_of)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = else value

	(ptr 'this 'args 'class 'value)
	(uint 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(errorif {length != 2} 'error1)
	(f-call 'vector 'get_element {args, 0} {class})
	(f-call 'obj 'inst_of (cat {class, @} (f-path 'class 'string)) {value})
	(errorifnot {value} 'error2)
	(f-call 'sys_load 'bind {class->string_data} {class})
	(errorifnot {class} 'error2)
	(f-call 'vector 'get_element {args, 1} {args})
	(f-call 'obj 'inst_of {args, class} {value})
	(vpif {value})
		(f-call 'lisp 'sym_intern_cstr {this, value - ubyte(value - 1)} {value})
	(else)
		(assign {this->lisp_sym_nil} {value})
		(f-call 'ref 'ref {value})
	(endif)

(vp-label 'exit)
	(assign {this, value} '(r0 r1))
	(return)

(errorcases
(vp-label 'error2)
	(assign {"(inst-of class obj) not a class"} {value})
	(goto 'error)
(vp-label 'error1)
	(assign {"(inst-of class obj) wrong number of args"} {value})
(vp-label 'error)
	(f-call 'lisp 'repl_error {this, value, args} {value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
