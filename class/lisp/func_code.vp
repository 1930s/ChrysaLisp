(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/string/string.inc)
(import 'class/boxed_long/boxed_long.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_code)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)
	(uint 'length 'char)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length == 1})
		(f-call 'vector 'get_element {args, 0} {value})
		(vpif (cat {value->obj_vtable == @} (f-path 'class 'string)))
			(assign {ubyte (value->string_data)} {char})
			(f-call 'boxed_long 'create {} {value})
			(f-call 'boxed_long 'set_value {value, char})
		(else)
			(f-call 'lisp 'repl_error {this, "(code char) not a string", args} {value})
		(endif)
	(else)
		(f-call 'lisp 'repl_error {this, "(code char) wrong number of args", args} {value})
	(endif)

	(assign {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
