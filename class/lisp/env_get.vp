(import 'inc/func.inc)
(import 'class/pair/pair.inc)
(import 'class/error/error.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/env_get)
	;inputs
	;r0 = lisp object
	;r1 = symbol
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'symbol)
	(pptr 'iter)

	(push-scope)
	(assign '(r0 r1) {this, symbol})

	(f-call 'lisp 'env_find {this, symbol} {iter, _})
	(vpif {iter})
		(f-call 'pair 'ref_second {*iter} {symbol})
	(else)
		(f-call 'error 'create {"symbol not bound", symbol} {symbol})
	(endif)

	(assign {this, symbol} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
