(import 'sys/func.inc)
(import 'class/stream_str/class.inc)
(import 'class/string/class.inc)
(import 'class/lisp/class.inc)

(def-method 'lisp 'func_strstream)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)

	(push-scope)
	(f-entry 'lisp 'func_strstream {this, args})

(errorcases
	(f-call 'lisp 'env_args_type {this, args, $sig, 1} {_, value})
	(errorifnot {value} 'error1))

	(d-call 'vector 'ref_element {args, 0} {_, value})
	(f-call 'stream_str 'create {value} {value})

(vp-label 'exit)
	(f-exit 'lisp 'func_strstream {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(string-stream str)", error_msg_wrong_types, args} {_, value})
	(goto 'exit)
	(signature 'sig 'string))

	(pop-scope-syms)

(def-func-end)
