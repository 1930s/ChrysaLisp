(import 'sys/func.inc)
(import 'class/integer/class.inc)
(import 'class/symbol/class.inc)
(import 'class/lisp/class.inc)

(def-method 'lisp 'func_type)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args)
	(int 'length)

	(push-scope)
	(entry 'lisp 'func_type {this, args})

(errorcases
	(d-call 'vector 'get_length {args} {_, length})
	(errorif {length != 1} 'error1))

	(call 'vector 'get_first {args} {_, args})
	(switch)
	(case (cat {args->obj_vtable == @} (f-path 'vector 'vtable)))
		(assign {lisp_type_list} {length})
		(break)
	(case (cat {args->obj_vtable == @} (f-path 'integer 'vtable)))
		(assign {lisp_type_integer} {length})
		(break)
	(case (cat {args->obj_vtable == @} (f-path 'symbol 'vtable)))
		(assign {lisp_type_symbol} {length})
		(break)
	(case (cat {args->obj_vtable == @} (f-path 'string 'vtable)))
		(assign {lisp_type_string} {length})
		(break)
	(default)
		(assign {-1} {length})
	(endswitch)
	(call 'integer 'create {length} {args})

(vp-label 'funcexit)
	(exit 'lisp 'func_type {this, args})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(type? obj)", error_msg_wrong_num_of_args, args} {_, args})
	(goto 'funcexit))

	(pop-scope-syms)

(def-func-end)
