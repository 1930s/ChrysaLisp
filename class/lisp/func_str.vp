(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/string/string.inc)
(import 'class/stream_str/stream_str.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_str)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value 'stream)
	(ulong 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length == 1})
		(f-call 'vector 'get_element {args, 0} {args})
		(vpif {args->obj_vtable == @class/class_string})
			(assign {args} {value})
			(f-call 'ref 'ref {value})
		(elseif {args->obj_vtable == @class/class_symbol})
			(f-call 'string 'create_from_buffer {args->string_data, args->string_length} {value})
		(elseif {args->obj_vtable == @class/class_stream_str})
			(f-call 'stream_str 'ref_string {args} {value})
		(else)
			(f-call 'string 'create_from_cstr {"                "} {value})
			(f-call 'stream_str 'create {value} {stream})
			(f-call 'lisp 'repl_print {this, stream, args})
			(f-call 'stream_str 'ref_string {stream} {value})
			(f-call 'ref 'deref {stream})
		(endif)
	(else)
		(f-call 'lisp 'repl_error {this, "(str arg) wrong number of args", args} {value})
	(endif)

	(assign {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
