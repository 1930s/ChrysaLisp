(import 'inc/func.inc)
(import 'class/class_vector.inc)
(import 'class/class_stream_str.inc)
(import 'class/class_string.inc)
(import 'class/class_symbol.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_filestream)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)
	(ulong 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length == 1})
		(f-call 'vector 'get_element {args, 0} {value})
		(vpif {value->obj_vtable == @class/class_string || value->obj_vtable == @class/class_symbol})
			(f-call 'string 'create_from_file {&value->string_data} {value})
			(vpif {value})
				(f-call 'stream_str 'create {value} {value})
			(else)
				(f-call 'error 'create {"(file-stream filename) filename not found", args} {value})
			(endif)
		(else)
			(f-call 'error 'create {"(file-stream filename) filename not a filename", args} {value})
		(endif)
	(else)
		(f-call 'error 'create {"(file-stream filename) not enough args", args} {value})
	(endif)

	(assign {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
