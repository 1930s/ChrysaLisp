(import 'inc/func.inc)
(import 'class/vector/vector.inc)
(import 'class/stream_str/stream_str.inc)
(import 'class/string/string.inc)
(import 'class/symbol/symbol.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_filestream)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'name 'value)
	(uint 'length)

	(push-scope)
	(assign '(r0 r1) {this, args})

	(d-call 'vector 'get_length {args} {length})
	(vpif {length == 1})
		(f-call 'vector 'get_element {args, 0} {name})
		(f-call 'obj 'inst_of {name, @class/class_string} {value})
		(vpif {value})
			(f-call 'string 'create_from_file {&name->string_data} {value})
			(vpif {value})
				(f-call 'stream_str 'create {value} {value})
			(else)
				(assign {this->lisp_sym_nil} {value})
				(f-call 'ref 'ref {value})
			(endif)
		(else)
			(f-call 'lisp 'repl_error {this, "(file-stream filename) filename not a filename", args} {value})
		(endif)
	(else)
		(f-call 'lisp 'repl_error {this, "(file-stream filename) not enough args", args} {value})
	(endif)

	(assign {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
