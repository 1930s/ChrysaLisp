(import 'sys/func.inc)
(import 'class/stream_str/stream_str.inc)
(import 'class/string/string.inc)
(import 'class/symbol/symbol.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_filestream)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)

	(push-scope)
	(f-entry 'lisp 'func_filestream {this, args})

(errorcases
	(f-call 'lisp 'env_args_type {this, args, $sig, 1} {_, value})
	(errorifnot {value} 'error1))

	(f-call 'vector 'get_element {args, 0} {_, value})
	(f-call 'string 'create_from_file {&value->string_data} {value})
	(vpif {value})
		(f-call 'stream_str 'create {value} {value})
	(else)
		(f-call 'ref 'ref {this->lisp_sym_nil} {value})
	(endif)

(vp-label 'exit)
	(f-exit 'lisp 'func_filestream {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(file-stream filename)", error_msg_wrong_types, args} {_, value})
	(goto 'exit)
	(signature 'sig 'string))

	(pop-scope-syms)

(def-func-end)
