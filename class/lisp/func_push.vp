(import 'inc/func.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/func_push)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'value)
	(uint 'length)

	(push-scope)
	(f-entry 'lisp 'func_push {this, args})

	(d-call 'vector 'get_length {args} {_, length})
	(errorif {length < 2} 'error1)
	(f-call 'vector 'get_element {args, 0} {_, value})
	(errorif (cat {value->obj_vtable != @} (f-path 'class 'vector)) 'error2)
	(f-call 'vector 'append {value, args, 1, length})
	(f-call 'ref 'ref {value})

(vp-label 'exit)
	(f-exit 'lisp 'func_push {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(push list form ...)", error_msg_wrong_num_of_args, args} {_, value})
	(goto 'exit)
(vp-label 'error2)
	(f-call 'lisp 'repl_error {this, "(push list form ...)", error_msg_not_a_list, args} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
