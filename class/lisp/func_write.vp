(import 'sys/func.inc)
(import 'class/stream_str/class.inc)
(import 'class/string/class.inc)
(import 'class/lisp/class.inc)

(def-method 'lisp 'func_write)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
	(union
		'(pptr 'iter_begin)
		'(ptr 'stream))

	(push-scope)
	(entry 'lisp 'func_write {this, args})

(errorcases
	(call 'lisp 'env_args_type {args, $sig, 2} {value})
	(errorifnot {value} 'error1))

	(call 'vector 'get_begin {args} {_, iter_begin})
	(assign {iter_begin[0], iter_begin[ptr_size]} {stream, value})
	(call 'obj 'ref {value})
	(call 'stream_str 'write {stream, &value->string_data, value->string_length})

(vp-label 'funcexit)
	(exit 'lisp 'func_write {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(call 'lisp 'repl_error {this, "(write stream str)", error_msg_wrong_types, args} {_, value})
	(goto 'funcexit)
	(signature 'sig 'stream 'string))

	(pop-scope-syms)

(def-func-end)
