(import 'sys/func.inc)
(import 'class/integer/integer.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/lisp/env_args_set)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;r2 = args dest (ptr)
	;r3 = args offset (uint)
	;outputs
	;r0 = lisp object (ptr)

	(ptr 'this 'args 'value)
	(pptr 'iter_begin 'iter_end 'dest)
	(uint 'start)

	(push-scope)
	(f-entry 'lisp 'env_args_set {this, args, dest, start})

	(f-call 'vector 'get_iter {args, start} {_, iter_begin})
	(f-call 'vector 'get_end {args} {_, iter_end})
	(loop-while {iter_begin != iter_end})
		(assign {*iter_begin} {value})
		(vpif (cat {value->obj_vtable == @} (f-path 'integer 'vtable)))
			(f-call 'integer 'get_value {value} {_, value})
		(endif)
		(assign {value} {*dest})
		(assign {iter_begin + ptr_size, dest + ptr_size} {iter_begin, dest})
	(loop-end)

	(f-exit 'lisp 'env_args_set {this})
	(pop-scope)
	(return)

(def-func-end)
