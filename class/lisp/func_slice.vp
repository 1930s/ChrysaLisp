(import 'inc/func.inc)
(import 'class/class_vector.inc)
(import 'class/class_sequence.inc)
(import 'class/class_boxed_long.inc)
(import 'class/class_error.inc)
(import 'class/class_lisp.inc)

(def-func 'class/lisp/func_slice)
	;inputs
	;r0 = lisp object
	;r1 = args
	;outputs
	;r0 = lisp object
	;r1 = value

	(ptr 'this 'args 'seq 'value)
	(int 'length 'start 'end)

	(push-scope)
	(retire '(r0 r1) {this, args})

	(devirt-call 'vector 'get_length {args} {length})
	(vpif {length == 3})
		(func-call 'vector 'get_element {args, 2} {seq})
		(func-path 'class 'sequence)
		(func-call 'obj 'inst_of {seq, @ _function_} {value})
		(vpif {value})
			(func-call 'vector 'get_element {args, 0} {value})
			(vpif {value -> obj_vtable == @class/class_boxed_long})
				(func-call 'boxed_long 'get_value {value} {start})
				(func-call 'vector 'get_element {args, 1} {value})
				(gotoif {value -> obj_vtable != @class/class_boxed_long} 'index_error)
				(func-call 'boxed_long 'get_value {value} {end})
				(virt-call 'sequence 'get_length {seq} {length})
				(vpif {start < 0})
					(assign {length + start + 1} {start})
				(endif)
				(vpif {end < 0})
					(assign {length + end + 1} {end})
				(endif)
				(vpif {start >= 0 && end <= length})
					(virt-call 'sequence 'slice {seq, start, end} {value})
					(expr {this, value} '(r0 r1))
					(return)
				(else)
					(func-call 'error 'create {"(slice start end seq) index out of bounds", args} {value})
				(endif)
			(else)
			(vp-label 'index_error)
				(func-call 'error 'create {"(slice start end seq) not an index", args} {value})
			(endif)
		(else)
			(func-call 'error 'create {"(slice start end seq) not a sequence", args} {value})
		(endif)
	(else)
		(func-call 'error 'create {"(slice start end seq) wrong number of args", args} {value})
	(endif)

	(expr {this, value} '(r0 r1))
	(pop-scope)
	(return)

(def-func-end)
