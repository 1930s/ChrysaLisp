(import 'inc/func.inc)
(import 'inc/gui.inc)
(import 'class/class_view.inc)

(def-func 'class/view/event)
	;inputs
	;r0 = view object
	;r1 = event message
	;trashes
	;all but r0, r4

	;what type of event ?
	(vp-cpy-ir r1 ev_msg_type r2)
	(switch)
	(case '(r2 == ev_type_mouse))
		;so what state are we in ?
		(vp-cpy-ir r1 ev_msg_buttons r2)
		(vp-cpy-ir r0 view_last_buttons r3)
		(vpif '(r3 != 0))
			;was down previously
			(vpif '(r2 != 0))
				;is down now, so move
				v_jmp view, mouse_move, {r0, r1}
			(else)
				;is not down now, so release
				(vp-cpy-ri r2 r0 view_last_buttons)
				v_jmp view, mouse_up, {r0, r1}
			(endif)
		(else)
			;was not down previously
			(vpif '(r2 != 0))
				;is down now, so first down
				(vp-cpy-ri r2 r0 view_last_buttons)
				v_jmp view, mouse_down, {r0, r1}
			(else)
				;is not down now, so hover
				v_jmp view, mouse_hover, {r0, r1}
			(endif)
		(endif)
		(break)
	(case '(r2 == ev_type_key))
		(vp-cpy-ir r1 ev_msg_keycode r2)
		(vpif '(r2 >= 0))
			v_jmp view, key_down, {r0, r1}
		(else)
			v_jmp view, key_up, {r0, r1}
		(endif)
	(endswitch)
	(vp-ret)

(def-func-end)
