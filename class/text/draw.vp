(import 'inc/func.inc)
(import 'inc/gui.inc)
(import 'inc/font.inc)
(import 'class/class_text.inc)
(import 'class/class_string.inc)
(import 'class/class_vector.inc)

(def-func 'class/text/draw)
	;inputs
	;r0 = view object
	;r1 = ctx object
	;trashes
	;all but r0, r4

	(ptr 'inst 'ctx 'txt)
	(pptr 'words 'words_end)
	(ulong 'length)
	(long 'x)

	;save inputs
	(push-scope)
	(retire '(r0, r1) '(inst, ctx))

	;draw text
	(vpif '((inst -> text_string && inst -> text_font)))
		(assign '(inst -> text_words -> vector_array) '(words))
		(devirt-call 'vector 'get_length '(inst -> text_words) '(length))
		(assign '(& words [ length * ptr_size ]) '(words_end))
		(assign '(0) '(x))
		(loop-start)
			(func-call 'gui_font 'text '(inst -> text_font, * words) '(txt))
			(vpif '((txt)))
				(func-call 'gui_ctx 'blit '(ctx, txt -> ft_text_texture, inst -> text_text_color, x, 0, txt -> ft_text_width, txt -> ft_text_height))
				(assign '(x + txt -> ft_text_width + (txt -> ft_text_height >> 2)) '(x))
			(endif)
			(assign '(words + ptr_size) '(words))
		(loop-until '((words == words_end)))
	(endif)

	(expr '(inst) '(r0))
	(pop-scope)
	(return)

(def-func-end)
