(import 'inc/func.inc)
(import 'class/class_text.inc)
(import 'class/class_string.inc)

(def-func 'class/text/set_text)
	;inputs
	;r0 = text object
	;r1 = 0, else string object
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(ptr 'local_inst)
		(long 'local_string)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src '(r0, r1))
	(set-dst '([r4 + local_inst], [r4 + local_string]))
	(map-src-to-dst)

	;deref the old string and words
	(vp-cpy-ir r0 text_string r0)
	(vpif '(r0 != 0))
		(f-call 'string 'deref '(r0))
		(vp-cpy-ir r4 local_inst r0)
		(vp-cpy-ir r0 text_words r1)
		(vp-xor-rr r2 r2)
		(vp-cpy-ri r2 r0 text_words)
		(f-call 'string 'deref '(r1))
	(endif)

	;transfer reference to new string
	(vp-cpy-ir r4 local_inst r0)
	(vp-cpy-ir r4 local_string r1)
	(vp-cpy-ri r1 r0 text_string)
	(vpif '(r1 != 0))
		(f-call 'string 'split '(r1, 32) '(r1))
		(vp-cpy-ir r4 local_inst r0)
		(vp-cpy-ri r1 r0 text_words)
	(endif)

	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
