(import 'inc/func.inc)
(import 'class/boxed_ptr/boxed_ptr.inc)

(class-macro-new 'boxed_ptr)
(class-macro-create 'boxed_ptr)

(def-func 'class/boxed_ptr/init)
	;inputs
	;r0 = object
	;r1 = vtable pointer
	;outputs
	;r1 = 0 if error, else ok

	;init parent
	(s-call 'boxed_ptr 'init '(r0 r1) '(r1))
	(vpif '(r1 != 0))
		;init myself
		(vp-xor-rr r2 r2)
		(vp-cpy-ri r2 r0 boxed_ptr_value)
		(vp-cpy-ri r2 r0 boxed_ptr_flags)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/boxed_ptr/get_flags)
	;inputs
	;r0 = object
	;outputs
	;r0 = object
	;r1 = value

	(class/boxed_ptr/get_flags)
	(vp-ret)

(def-func-end)

(def-func 'class/boxed_ptr/get_value)
	;inputs
	;r0 = object
	;outputs
	;r0 = object
	;r1 = value

	(class/boxed_ptr/get_value)
	(vp-ret)

(def-func-end)

(def-func 'class/boxed_ptr/set_flags)
	;inputs
	;r0 = object
	;r1 = value
	;outputs
	;r0 = object

	(class/boxed_ptr/set_flags)
	(vp-ret)

(def-func-end)

(def-func 'class/boxed_ptr/set_value)
	;inputs
	;r0 = object
	;r1 = value
	;outputs
	;r0 = object

	(class/boxed_ptr/set_value)
	(vp-ret)

(def-func-end)
