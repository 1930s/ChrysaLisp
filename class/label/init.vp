(import 'inc/func.inc)
(import 'class/class_flow.inc)
(import 'class/class_text.inc)
(import 'class/class_label.inc)

(def-func 'class/label/init)
	;inputs
	;r0 = label object
	;r1 = vtable pointer
	;outputs
	;r1 = 0 if error, else ok

	;init parent
	(s-call 'label 'init '(r0, r1) '(r1))
	(vpif '(r1 != 0))
		(vp-push r0)

		;init myself
		;add my flow
		(f-call 'flow 'create '() '(r0))
		(assert '(r0, !=, 0))
		(f-call 'flow 'set_flags '(r0, 0))
		(f-call 'flow 'set_flow_flags '(r0, flow_flag_right | flow_flag_align_vcenter))
		(vp-cpy-ir r4 r1)
		(vp-cpy-ri r0 r1 label_flow)
		(f-call 'flow 'add_front '(r0, r1))

		;add my text
		(f-call 'text 'create '() '(r0))
		(assert '(r0, !=, 0))
		(vp-cpy-ir r4 r1)
		(vp-cpy-ri r0 r1 label_text)
		(f-call 'text 'set_color '(r0, 0))
		(vp-cpy-ir r4 r1)
		(f-call 'text 'add_front '(r0, (r1 label_flow)))

		(vp-pop r0)
	(endif)
	(vp-ret)

(def-func-end)
