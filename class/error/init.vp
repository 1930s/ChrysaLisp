(import 'inc/func.inc)
(import 'class/class_error.inc)
(import 'class/class_string.inc)

(def-func 'class/error/init)
	;inputs
	;r0 = error object
	;r1 = vtable pointer
	;r2 = cstr pointer
	;r3 = error payload object
	;outputs
	;r1 = 0 if error, else ok
	;trashes
	;r1-r3, r5-r7

	(def-struct 'local)
		(ptr 'local_inst)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src r0, r2, r3)
	(set-dst [r4 + local_inst], [r0 + error_description], [r0 + error_object])
	(map-src-to-dst)

	;init parent
	s_call error, init, {r0, r1}, {r1}
	if r1, !=, 0
		;init self
		(f-call 'string 'create_from_cstr '([r0 + error_description]) '(r0))
		(vp-cpy-ir r4 local_inst r1)
		(vp-cpy-ri r0 r1 error_description)
		f_call ref, ref, {[r1 + error_object]}
		(vp-cpy-ir r4 local_inst r0)
	endif

	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
