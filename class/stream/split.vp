(import 'inc/func.inc)
(import 'class/class_stream.inc)
(import 'class/class_string.inc)
(import 'class/class_vector.inc)

(def-func 'class/stream/split)
	;inputs
	;r0 = stream object
	;r1 = split char
	;outputs
	;r0 = stream object
	;r1 = vector of split streams
	;trashes
	;all but r0, r4

	(ptr 'inst 'splits 'string)
	(pubyte 'start)
	(ulong 'length)
	(ubyte 'char)

	;save inputs
	(push-scope)
	(retire '(r0, r1) '(inst, char))

	;create output vector
	(func-call 'vector 'create '() '(splits))

	;fill vector with splits
	(loop-start)
		(func-call 'stream 'skip '(inst, char))
		(assign '(inst -> stream_bufp) '(start))
		(func-call 'stream 'skip_not '(inst, char))
		(assign '(inst -> stream_bufp - start) '(length))
		(breakif '((length == 0)))
		(func-call 'string 'create_from_buffer '(start, length) '(string))
		(func-call 'vector 'push_back '(splits, string))
	(loop-end)

	(eval '(inst, splits) '(r0, r1))
	(pop-scope)
	return

(def-func-end)
