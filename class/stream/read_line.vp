(import 'inc/func.inc)
(import 'class/class_stream.inc)

(def-func 'class/stream/read_line)
	;inputs
	;r0 = stream object
	;r1 = buffer
	;r2 = buffer length
	;outputs
	;r0 = stream object
	;r1 = -1 for EOF, else bytes read
	;trashes
	;all but r0, r4

	(ptr 'inst)
	(pubyte 'buffer 'buffer_end 'start)
	(long 'char)

	;save inputs
	(push-scope)
	(retire '(r0 r1 r2) {inst, buffer, buffer_end})

	(vpif {buffer_end == 0})
		(expr {inst, 0} '(r0 r1))
		(return)
	(endif)

	(assign {buffer, buffer + buffer_end} {start, buffer_end})
	(loop-start)
		(func-call 'stream 'read_char {inst} {char})
		(continueif '(char == 13))
		(breakif {char == 10 || char < 0})
		(assign {char} {* buffer})
		(assign {buffer + 1} {buffer})
	(loop-until {buffer == buffer_end})

	(vpif {buffer == start && char < 0})
		(expr {inst, char} '(r0 r1))
	(else)
		(expr {inst, buffer - start} '(r0 r1))
	(endif)
	(pop-scope)
	(return)

(def-func-end)
