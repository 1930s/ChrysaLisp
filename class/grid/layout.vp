(import 'inc/func.inc)
(import 'class/class_grid.inc)

(def-func 'class/grid/layout)
	;inputs
	;r0 = grid object
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(long 'local_count)
		(long 'local_cell_w)
		(long 'local_cell_h)
	(def-struct-end)

	(vp-sub-cr local_size r4)
	(vp-xor-rr r1 r1)
	(vp-cpy-ri r1 r4 local_count)

	(vp-xor-rr r10 r10)
	(vp-cpy-ir r0 view_w r9)
	vp_shl 32, r9
	(vp-cpy-ir r0 grid_width r8)
	(vp-div r8 r10 r9)
	(vp-cpy-ri r9 r4 local_cell_w)

	(vp-xor-rr r10 r10)
	(vp-cpy-ir r0 view_h r9)
	vp_shl 32, r9
	(vp-cpy-ir r0 grid_height r8)
	(vp-div r8 r10 r9)
	(vp-cpy-ri r9 r4 local_cell_h)

	(f-call 'grid 'forward '(r0, r4, $callback))

	(vp-add-cr local_size r4)
	(vp-ret)

callback:
	(vp-xor-rr r8 r8)
	(vp-cpy-ir r1 local_count r9)
	(vp-cpy-ir r0 view_parent r2)
	(vp-cpy-ir r2 grid_width r10)
	(vp-div r10 r8 r9)
	(vp-cpy-ir r1 local_cell_w r10)
	(vp-cpy-ir r1 local_cell_h r11)
	(vp-mul-rr r10 r8)
	(vp-mul-rr r11 r9)
	(vp-add-rr r8 r10)
	(vp-add-rr r9 r11)
	vp_shr 32, r8
	vp_shr 32, r9
	vp_shr 32, r10
	vp_shr 32, r11
	(vp-sub-rr r8 r10)
	(vp-sub-rr r9 r11)

	(vp-cpy-ir r1 local_count r2)
	(vp-inc r2)
	(vp-cpy-ri r2 r1 local_count)
	(f-jmp 'view 'change '(r0, r8, r9, r10, r11))

(def-func-end)
