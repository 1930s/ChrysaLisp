(import 'inc/func.inc)
(import 'class/class_grid.inc)

(class-macro-new 'grid)
(class-macro-create 'grid)

(def-func 'class/grid/init)
	;inputs
	;r0 = grid object
	;r1 = vtable pointer
	;outputs
	;r1 = 0 if error, else ok

	;init parent
	(s-call 'grid 'init '(r0 r1) '(r1))
	(vpif '(r1 != 0))
		;init myself
		(vp-cpy-cr 1 r1)
		(vp-cpy-ri r1 r0 grid_width)
		(vp-cpy-ri r1 r0 grid_height)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/grid/layout)
	;inputs
	;r0 = grid object
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(long 'local_count)
		(long 'local_cell_w)
		(long 'local_cell_h)
	(def-struct-end)

	(vp-sub-cr local_size r4)
	(vp-xor-rr r1 r1)
	(vp-cpy-ri r1 r4 local_count)

	(vp-xor-rr r10 r10)
	(vp-cpy-ir-i r0 view_w r9)
	(vp-shl-cr 32 r9)
	(vp-cpy-ir r0 grid_width r8)
	(vp-div-rrr r8 r10 r9)
	(vp-cpy-ri r9 r4 local_cell_w)

	(vp-xor-rr r10 r10)
	(vp-cpy-ir-i r0 view_h r9)
	(vp-shl-cr 32 r9)
	(vp-cpy-ir r0 grid_height r8)
	(vp-div-rrr r8 r10 r9)
	(vp-cpy-ri r9 r4 local_cell_h)

	(f-call 'grid 'forward '(r0 r4 ($ callback)))

	(vp-add-cr local_size r4)
	(vp-ret)

(vp-label 'callback)
	(vp-xor-rr r8 r8)
	(vp-cpy-ir r1 local_count r9)
	(vp-cpy-ir r0 view_parent r2)
	(vp-cpy-ir r2 grid_width r10)
	(vp-div-rrr r10 r8 r9)
	(vp-cpy-ir r1 local_cell_w r10)
	(vp-cpy-ir r1 local_cell_h r11)
	(vp-mul-rr r10 r8)
	(vp-mul-rr r11 r9)
	(vp-add-rr r8 r10)
	(vp-add-rr r9 r11)
	(vp-shr-cr 32 r8)
	(vp-shr-cr 32 r9)
	(vp-shr-cr 32 r10)
	(vp-shr-cr 32 r11)
	(vp-sub-rr r8 r10)
	(vp-sub-rr r9 r11)

	(vp-cpy-ir r1 local_count r2)
	(vp-inc r2)
	(vp-cpy-ri r2 r1 local_count)
	(f-jmp 'view 'change '(r0 r8 r9 r10 r11))

(def-func-end)

(def-func 'class/grid/pref_size)
	;inputs
	;r0 = grid object
	;outputs
	;r10 = prefered width
	;r11 = prefered height
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(int 'local_w)
		(int 'local_h)
	(def-struct-end)

	(vp-sub-cr local_size r4)
	(vp-xor-rr r1 r1)
	(vp-cpy-ri-i r1 r4 local_w)
	(vp-cpy-ri-i r1 r4 local_h)

	(f-call 'grid 'forward '(r0 r4 ($ callback)))

	(vp-cpy-ir-i r4 local_w r10)
	(vp-cpy-ir-i r4 local_h r11)
	(vp-mul-ir r0 grid_width r10)
	(vp-mul-ir r0 grid_height r11)
	(vp-add-cr local_size r4)
	(vp-ret)

(vp-label 'callback)
	(vp-push r1)
	(v-call 'view 'pref_size '(r0) '(r10 r11))
	(vp-pop r1)
	(vp-cpy-ir-i r1 local_w r2)
	(vpif '(r10 > r2))
		(vp-cpy-ri-i r10 r1 local_w)
	(endif)
	(vp-cpy-ir-i r1 local_h r2)
	(vpif '(r11 > r2))
		(vp-cpy-ri-i r11 r1 local_h)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/grid/set_grid)
	;inputs
	;r0 = view object
	;r10 = width
	;r11 = height

	(vp-cpy-ri r10 r0 grid_width)
	(vp-cpy-ri r11 r0 grid_height)
	(vp-ret)

(def-func-end)
