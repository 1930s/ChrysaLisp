(import 'inc/func.inc)
(import 'inc/string.inc)
(import 'class/class_string.inc)

(def-func 'class/string/append)
	;inputs
	;r0 = string object
	;r1 = string object
	;outputs
	;r0 = 0 if error, else new string object
	;trashes
	;r1-r3, r5-r7

	;save inputs
	set_src r0, r1
	set_dst r6, r7
	map_src_to_dst

	;get size of strings
	vp_cpy [r0 + string_length], r0
	vp_add [r1 + string_length], r0
	vp_add string_size + 1, r0

	;create new string object
	f_call string, new, {r0}, {r0}
	if r0, !=, 0
		;init the object
		func_path class, string
		f_call string, init1, {r0, @_function_, r6, r7}, {r1}
		if r1, ==, 0
			;error with init
			v_call string, delete, {r0}, {}, r1
			vp_xor r0, r0
		endif
	endif
	vp_ret

(def-func-end)
