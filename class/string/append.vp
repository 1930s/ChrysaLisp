(import 'inc/func.inc)
(import 'inc/string.inc)
(import 'class/class_string.inc)

(def-func 'class/string/append)
	;inputs
	;r0 = string object
	;r1 = string object
	;outputs
	;r0 = 0 if error, else new string object
	;trashes
	;r1-r3, r5-r7

	;save inputs
	(set-src '(r0 r1))
	(set-dst '(r6 r7))
	(map-src-to-dst)

	;get size of strings
	(vp-cpy-ir r0 string_length r0)
	(vp-add-ir r1 string_length r0)
	(vp-add-cr (add string_size 1) r0)

	;create new string object
	(f-call 'string 'new '(r0) '(r0))
	(vpif '(r0 != 0))
		;init the object
		(func-path 'class 'string)
		(f-call 'string 'init1 `(r0 (@ ,_function_) r6 r7) '(r1))
		(vpif '(r1 == 0))
			;error with init
			(v-call 'string 'delete '(r0) '() 'r1)
			(vp-xor-rr r0 r0)
		(endif)
	(endif)
	(vp-ret)

(def-func-end)
