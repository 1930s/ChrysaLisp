(import 'inc/func.inc)
(import 'inc/string.inc)
(import 'class/class_string.inc)

(def-func 'class/string/create_from_buffer)
	;inputs
	;r0 = buffer pointer
	;r1 = buffer length
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	;save size of data
	(vp-cpy-rr r0 r6)
	(vp-cpy-rr r1 r7)

	;create new string object
	(f-call 'string 'new '(&[r1 + string_size + 1]) '(r0))
	(vpif '(r0 != 0))
		;init the object
		func_path class, string
		(f-call 'string 'init '(r0, @_function_, r6, r7) '(r1))
		(vpif '(r1 == 0))
			;error with init
			(v-call 'string 'delete '(r0) '() 'r1)
			(vp-xor-rr r0 r0)
		(endif)
	(endif)
	(vp-ret)

(def-func-end)
