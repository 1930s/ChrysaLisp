(import 'inc/func.inc)
(import 'inc/load.inc)
(import 'inc/string.inc)
(import 'class/class_string.inc)

(def-func 'class/string/create_from_file)
	;inputs
	;r0 = c string pointer
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	;save c string pointer
	(vp-cpy-rr r0 r6)

	;get size of string from file size
	(f-bind 'sys_load 'statics r7)
	(vp-add-cr ld_statics_stat_buffer r7)
	sys_stat r0, r7
	(vpif '(r0 != 0))
	(vp-label 'exit)
		;no such file
		(vp-xor-rr r0 r0)
		(vp-ret)
	(endif)

	;test for regular file only
	(vp-cpy-ir-us r7 stat_mode r0)
	(vp-and-cr s_ifmt r0)
	(vp-jmpif '(r0 != s_ifreg) 'exit)

	;create new string object
	(vp-cpy-ir r7 stat_fsize r1)
	(f-call 'string 'new '((& r1 (add string_size 1))) '(r0))
	(vpif '(r0 != 0))
		;init the object
		(func-path 'class 'string)
		(f-call 'string 'init2 `(r0 (@ ,_function_) r6 (r7 stat_fsize)) '(r1))
		(vpif '(r1 == 0))
			;error with init
			(v-call 'string 'delete '(r0) '() 'r1)
			(vp-xor-rr r0 r0)
		(endif)
	(endif)
	(vp-ret)

(def-func-end)
