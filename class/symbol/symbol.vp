(import 'inc/func.inc)
(import 'class/symbol/symbol.inc)

(def-func 'class/symbol/create_raw)
	;inputs
	;r0 = length
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	(f-call 'string 'create_raw '(r0) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/symbol/create_from_buffer)
	;inputs
	;r0 = buffer pointer
	;r1 = buffer length
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	(f-call 'string 'create_from_buffer '(r0 r1) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/symbol/create_from_cstr)
	;inputs
	;r0 = c symbol pointer
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	(f-call 'string 'create_from_cstr '(r0) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/symbol/create_from_file)
	;inputs
	;r0 = c symbol pointer
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;r1-r3, r5-r7

	(f-call 'string 'create_from_file '(r0) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/symbol/create_from_long)
	;inputs
	;r0 = number
	;r1 = base
	;outputs
	;r0 = 0 if error, else object
	;trashes
	;all but r4

	(f-call 'string 'create_from_long '(r0 r1) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/symbol/append)
	;inputs
	;r0 = symbol object
	;r1 = symbol object
	;outputs
	;r0 = 0 if error, else new symbol object
	;trashes
	;r1-r3, r5-r7

	(f-call 'string 'append '(r0 r1) '(r0))
	(vpif '(r0 != 0))
		(fn-bind (f-path 'class 'symbol) r1)
		(vp-cpy-ri r1 r0 obj_vtable)
	(endif)
	(vp-ret)

(def-func-end)
