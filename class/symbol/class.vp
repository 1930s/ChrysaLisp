(import 'sys/func.inc)
(import 'class/symbol/class.inc)
(import 'class/hash_set/class.inc)

(gen-class 'symbol)

(def-method 'symbol 'intern)
	;inputs
	;r0 = symbol object (ptr)
	;outputs
	;r0 = interned symbol object (ptr)
	;trashes
	;all

	(ptr 'this 'set)
	(pptr 'iter)

	(push-scope)
	(entry 'symbol 'intern {this})

	(assign {ptr($symbols)} {set})
	(vpifnot {set})
		(call 'hash_set 'create (cat {@} (f-path 'symbol 'same) {, 101}) {set})
		(assign {set} {ptr($symbols)})
	(endif)

	(call 'hash_set 'insert {set, this} {_, iter, _})
	(call 'obj 'deref {this})
	(call 'obj 'ref {*iter} {this})
	(assign (cat {@} (f-path 'symbol 'vtable)) {this->obj_vtable})

	(exit 'symbol 'intern {this})
	(pop-scope)
	(return)

;;;;;;;;;;;;;;;;;;
; interned symbols
;;;;;;;;;;;;;;;;;;

	(vp-align ptr_size)
(vp-label 'symbols)
	(vp-long 0)

(def-func-end)

(def-method 'symbol 'intern_cstr)
	;inputs
	;r0 = c string (ptr)
	;outputs
	;r0 = interned symbol object (ptr)
	;trashes
	;all

	(entry 'symbol 'intern_cstr '(r0))
	(call 'symbol 'create_from_cstr '(r0) '(r0))
	(jump 'symbol 'intern '(r0))

(def-func-end)
