(import 'inc/func.inc)
(import 'class/ref/ref.inc)

(def-func 'class/ref/init)
	;inputs
	;r0 = object
	;r1 = vtable pointer
	;outputs
	;r1 = 0 if error, else ok

	;init parent
	(s-call 'ref 'init '(r0 r1) '(r1))
	(vpif '(r1 != 0))
		;init myself
		(vp-cpy-cr 1 r1)
		(vp-cpy-ri r1 r0 ref_count)
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/ref/deref)
	;inputs
	;r0 = object
	;trashes
	;all but r4

	;dec ref count
	(vp-cpy-ir r0 ref_count r1)
	(vp-sub-cr 1 r1)
	(vp-cpy-ri r1 r0 ref_count)

	;destroy if 0
	(vpif '(r1 == 0))
		(f-jmp 'ref 'destroy '(r0))
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/ref/deref_if)
	;inputs
	;r0 = 0, else object
	;trashes
	;all but r4

	(vpif '(r0 != 0))
		(f-jmp 'ref 'deref '(r0))
	(endif)
	(vp-ret)

(def-func-end)

(def-func 'class/ref/ref_if)
	;inputs
	;r0 = 0, else object
	;trashes
	;r1

	;inc ref count
	(vpif '(r0 != 0))
		(f-call 'ref 'ref '(r0))
	(endif)
	(vp-ret)

(def-func-end)
