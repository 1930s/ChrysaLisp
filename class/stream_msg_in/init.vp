(import 'inc/func.inc)
(import 'class/class_stream_msg_in.inc)
(import 'class/class_stream_msg_out.inc)

(def-func 'class/stream_msg_in/init)
	;inputs
	;r0 = stream_msg_in object
	;r1 = vtable pointer
	;r2 = target mailbox
	;outputs
	;r1 = 0 if error, else ok
	;trashes
	;all but r0, r4

	;save inputs
	(set-src '(r2))
	(set-dst '([r0 + stream_msg_in_mailbox]))
	(map-src-to-dst)

	;init parent
	(s-call 'stream_msg_in 'init '(r0, r1, 0, 0, 0, 0) '(r1))
	if r1, !=, 0
		;init myself
		(vp-xor-rr r1 r1)
		(vp-cpy-ri r1 r0 stream_msg_in_seqnum)
		(vp-cpy-ri r1 r0 stream_msg_in_ack_seqnum)
		(vp-cpy-cr stream_mail_state_started r1)
		(vp-cpy-ri r1 r0 stream_msg_in_state)
		(vp-lea-ir r0 stream_msg_in_list r1)
		(lh-init r1 r2)
	endif
	(vp-ret)

(def-func-end)
