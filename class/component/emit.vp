(import 'inc/func.inc)
(import 'inc/gui.inc)
(import 'class/class_component.inc)

(def-func 'class/component/emit)
	;inputs
	;r0 = component object
	;r1 = signal list
	;trashes
	;all but r0, r4
		;callback api
		;r0 = target inst
		;r1 = source inst
		;r15 = dispatch register
		;rest as passed by call to emit
		;callback should normally save register the signal sends
		;but it could filter or adjust them for fancy reasons !

	(def-struct 'local)
		(ptr 'local_inst)
		(ptr 'local_next)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src r0)
	(set-dst [r4 + local_inst])
	(map-src-to-dst)

	;emit the signal
	(loop-list-forward r1, r0, r1)
		(vp-cpy-ri r1 r4 local_next)

		;call method on target component object
		(vp-cpy-ir r0 gui_sigslot_addr r15)
		(vp-cpy-ir r0 gui_sigslot_inst r0)
		(vp-cpy-ir r4 local_inst r1)
		(vp-call-r r15)

		(vp-cpy-ir r4 local_next r1)
	(loop-end)

	;restore inst
	(vp-cpy-ir r4 local_inst r0)
	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
