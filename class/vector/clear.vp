(import 'inc/func.inc)
(import 'class/class_vector.inc)

(def-func 'class/vector/clear)
	;inputs
	;r0 = vector object
	;outputs
	;r0 = vector object
	;trashes
	;all but r0, r4

	;deref all elements
	(f-call 'vector 'for_each '(r0, 0, [r0 + vector_length], $callback, 0) '(_))

	;free dynamic array
	vp_push r0
	(f-call 'sys_mem 'free '([r0 + vector_array]))
	vp_pop r0

	;init myself
	(vp-xor-rr r1 r1)
	(vp-cpy-ri r1 r0 vector_array)
	(vp-cpy-ri r1 r0 vector_length)
	(vp-cpy-ri r1 r0 vector_capacity)
	(vp-ret)

callback:
	;inputs
	;r0 = predicate data pointer
	;r1 = element iterator
	;outputs
	;r1 = 0 if break, else not

	(f-call 'ref 'deref '([r1]))
	(vp-cpy-cr 1 r1)
	(vp-ret)

(def-func-end)
