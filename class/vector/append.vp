(import 'inc/func.inc)
(import 'class/class_vector.inc)

(def-func 'class/vector/append)
	;inputs
	;r0 = vector object
	;r1 = source vector object
	;r2 = vector element start
	;r3 = vector element end
	;outputs
	;r0 = vector object
	;trashes
	;r1-r3, r5-r8

	(def-struct 'local)
		(ptr 'local_inst)
		(ptr 'local_source)
		(ulong 'local_start)
		(ulong 'local_end)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src '(r0, r1, r2, r3))
	(set-dst '([r4 + local_inst], [r4 + local_source], [r4 + local_start], [r4 + local_end]))
	(map-src-to-dst)

	;extend existing vector
	(vp-sub-rr r2 r3)
	(vp-cpy-ir r0 vector_length r1)
	(vp-add-rr r3 r1)
	(f-call 'vector 'set_capacity '(r0, r1))

	;copy elements
	(vp-cpy-ir r4 local_start r5)
	(vp-cpy-ir r4 local_end r6)
	(loop-while '(r5 != r6))
		(d-call 'vector 'ref_element '([r4 + local_source], r5) '(r1))
		(f-call 'vector 'push_back '([r4 + local_inst], r1))
		(vp-inc r5)
	(loop-end)

	(vp-cpy-ir r4 local_inst r0)
	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
