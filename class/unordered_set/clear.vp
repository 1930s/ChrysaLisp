(import 'inc/func.inc)
(import 'class/class_unordered_set.inc)
(import 'class/class_vector.inc)

(def-func 'class/unordered_set/clear)
	;inputs
	;r0 = unordered_set object
	;outputs
	;r0 = unordered_set object
	;trashes
	;all but r0, r4

	;clear all buckets
	(vp-push r0)
	(d-call 'vector 'get_length '([ r0 + unordered_set_buckets ]) '(r1))
	(f-call 'vector 'for_each '(r0, 0, r1, $callback, 0) '(r1))
	(vp-pop r0)
	(vp-cpy-ri r1 r0 unordered_set_length)
	(vp-ret)

(vp-label 'callback)
	;inputs
	;r0 = predicate data pointer
	;r1 = element iterator
	;outputs
	;r1 = 0 if break, else not

	(f-call 'vector 'clear '([ r1 ]))
	(vp-cpy-cr 1 r1)
	(vp-ret)

(def-func-end)
