(import 'inc/func.inc)
(import 'class/class_unordered_set.inc)
(import 'class/class_vector.inc)

(def-func 'class/unordered_set/slice_impl)
	;inputs
	;r0 = unordered_set object
	;r1 = empty set/map object
	;r2 = element callback
	;r3 = start element
	;r5 = end element
	;outputs
	;r0 = unordered_set object
	;r1 = full set/map object
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(ptr 'local_obj)	;must be first !
		(ptr 'local_inst)
		(ptr 'local_callback)
		(ulong 'local_start_bucket)
		(ulong 'local_start_elem)
		(ulong 'local_end_bucket)
		(ulong 'local_end_elem)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src '(r0 r1 r2 r5))
	(set-dst '((r4 local_inst) (r4 local_obj) (r4 local_callback) (r4 local_end_elem)))
	(map-src-to-dst)

	(f-call 'unordered_set 'get_iter '(r0 r3) '(r6 r7))
	(f-call 'unordered_set 'get_iter '(r0 (r4 local_end_elem)) '(r8 r9))

	(vp-cpy-ir r7 0 r2)
	(vp-cpy-ir r9 0 r3)
	(vp-cpy-ir r2 vector_array r2)
	(vp-cpy-ir r3 vector_array r3)
	(vp-sub-rr r2 r6)
	(vp-sub-rr r3 r8)
	(vp-shr-cr 3 r6)
	(vp-shr-cr 3 r8)
	(vp-cpy-ri r6 r4 local_start_elem)
	(vp-cpy-ri r8 r4 local_end_elem)

	(vp-cpy-ir r0 unordered_set_buckets r2)
	(vp-cpy-ir r2 vector_array r2)
	(vp-sub-rr r2 r7)
	(vp-sub-rr r2 r9)
	(vp-shr-cr 3 r7)
	(vp-shr-cr 3 r9)
	(vp-cpy-ri r7 r4 local_start_bucket)
	(vp-cpy-ri r9 r4 local_end_bucket)

	(vpif '(r7 == r9))
		(f-call 'vector 'get_element '((r0 unordered_set_buckets) r7) '(r0))
		(f-call 'vector 'for_each '(r0 (r4 local_start_elem) (r4 local_end_elem) (r4 local_callback) r4) '(_))
	(else)
		(f-call 'vector 'get_element '((r0 unordered_set_buckets) r7) '(r0))
		(f-call 'vector 'for_each '(r0 (r4 local_start_elem) (r0 vector_length) (r4 local_callback) r4) '(_))

		(vp-cpy-ir r4 local_start_bucket r1)
		(vp-inc r1)
		(vpif '(r1 != (r4 local_end_bucket)))
			(vp-cpy-ir r4 local_inst r0)
			(f-call 'vector 'for_each '((r0 unordered_set_buckets) (r4 local_start_bucket) (r4 local_end_bucket) ($ callback) r4) '(_))
		(endif)

		(vp-cpy-ir r4 local_inst r0)
		(f-call 'vector 'get_element '((r0 unordered_set_buckets) (r4 local_end_bucket)) '(r0))
		(f-call 'vector 'for_each '(r0 0 (r4 local_end_elem) (r4 local_callback) r4) '(_))
	(endif)

	(vp-cpy-ir r4 local_obj r1)
	(vp-cpy-ir r4 local_inst r0)
	(vp-add-cr local_size r4)
	(vp-ret)

(vp-label 'callback)
	;inputs
	;r0 = predicate data pointer
	;r1 = element iterator
	;outputs
	;r1 = 0 if break, else not

	(vp-cpy-rr r0 r2)
	(vp-cpy-ir r1 0 r0)
	(f-call 'vector 'for_each '(r0 0 (r0 vector_length) (r2 local_callback) r2) '(_))
	(vp-cpy-cr 1 r1)
	(vp-ret)

(def-func-end)
