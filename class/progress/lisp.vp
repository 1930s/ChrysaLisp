(import 'sys/func.inc)
(import 'class/progress/progress.inc)
(import 'class/lisp/lisp.inc)

(def-func 'class/progress/lisp_create)
	;inputs
	;r0 = lisp object (ptr)
	;r1 = args vector object (ptr)
	;outputs
	;r0 = lisp object (ptr)
	;r1 = return value object (ptr)

	(ptr 'this 'args 'value)
(errorcases
	(uint 'length))

	(push-scope)
	(f-entry 'progress 'lisp_create {this, args})

(errorcases
	(v-call 'vector 'get_length {args} {_, length})
	(errorif {length} 'error1))

	(f-call 'progress 'create {} {value})

(vp-label 'exit)
	(f-exit 'progress 'lisp_create {this, value})
	(return)

(errorcases
(vp-label 'error1)
	(f-call 'lisp 'repl_error {this, "(create-progress)", error_msg_wrong_types, args} {_, value})
	(goto 'exit))

	(pop-scope-syms)

(def-func-end)
