(import 'sys/func.inc)
(import 'gui/gui.inc)
(import 'class/progress/progress.inc)

(gen-new 'progress)
(gen-create 'progress)
(gen-class 'progress)

(def-func 'class/progress/draw)
	;inputs
	;r0 = window object
	;r1 = ctx object
	;trashes
	;all but r0

	(def-struct 'local)
		(ptr 'this)
		(ptr 'ctx)
		(long 'fill_remain)
		(long 'fill_complete)
	(def-struct-end)

	;save inputs
	(vp-alloc-stack local_size)
	(assign '(r0 r1) '((rsp local_this) (rsp local_ctx)))

	;draw outline
	(f-call 'view 'get_color '(r0) '(_ r1))
	(f-call 'gui_ctx 'set_color '((rsp local_ctx) r1))
	(f-call 'progress 'get_bounds '((rsp local_this)) '(_ _ _ r9 r10))
	(f-call 'gui_ctx 'box '((rsp local_ctx) 0 0 r9 r10))

	;darker color
	(f-call 'view 'get_color '((rsp local_this)) '(_ r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'set_color '((rsp local_ctx) r1))

	;draw middle
	(f-call 'progress 'get_bounds '((rsp local_this)) '(r0 _ _ r9 r10))
	(vp-sub-cr (mul progress_border_size 2) r9)
	(vp-sub-cr (mul progress_border_size 2) r10)
	(vp-cpy-ir r0 progress_val r2)
	(vp-cpy-ir r0 progress_max r1)
	(vp-cpy-rr r9 r11)
	(vp-cpy-rr r9 r0)
	(vp-mul-rr r2 r0)
	(vp-xor-rr r2 r2)
	(vp-div-rrr r1 r2 r0)
	(vp-cpy-ri r0 rsp local_fill_complete)
	(vp-cpy-rr r0 r9)
	(vp-sub-rr r9 r11)
	(vp-cpy-ri r11 rsp local_fill_remain)
	(f-call 'gui_ctx 'filled_box '((rsp local_ctx) progress_border_size progress_border_size r9 r10))

	;very darker color
	(f-call 'view 'get_color '((rsp local_this)) '(_ r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'set_color '((rsp local_ctx) r1))

	;draw middle
	(f-call 'progress 'get_bounds '((rsp local_this)) '(_ _ _ _ r10))
	(vp-cpy-cr progress_border_size r7)
	(vp-sub-cr (mul progress_border_size 2) r10)
	(vp-cpy-ir rsp local_fill_complete r8)
	(vp-add-rr r8 r7)
	(f-call 'gui_ctx 'filled_box '((rsp local_ctx) r7 progress_border_size (rsp local_fill_remain) r10))

	(vp-cpy-ir rsp local_this r0)
	(vp-free-stack local_size)
	(vp-ret)

(def-func-end)

(def-func 'class/progress/layout)
	;inputs
	;r0 = progress object
	;trashes
	;all but r0

	(f-jmp 'progress 'opaque '(r0))

(def-func-end)

(def-func 'class/progress/pref_size)
	;inputs
	;r0 = progress object
	;outputs
	;r9 = preferred width
	;r10 = preferred height
	;trashes
	;all but r0

	(vp-cpy-cr 256 r9)
	(vp-cpy-cr 10 r10)
	(vp-ret)

(def-func-end)
