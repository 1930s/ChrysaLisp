(import 'inc/func.inc)
(import 'inc/gui.inc)
(import 'class/progress/progress.inc)

(gen-new 'progress)
(gen-create 'progress)
(gen-class 'progress)

(def-func 'class/progress/draw)
	;inputs
	;r0 = window object
	;r1 = ctx object
	;trashes
	;all but r0, r4

	(def-struct 'local)
		(ptr 'this)
		(ptr 'ctx)
		(long 'fill_remain)
		(long 'fill_complete)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(assign '(r0 r1) '((r4 local_this) (r4 local_ctx)))

	;draw outline
	(f-call 'view 'get_color '(r0) '(_ r1))
	(f-call 'gui_ctx 'set_color '((r4 local_ctx) r1))
	(f-call 'progress 'get_bounds '((r4 local_this)) '(_ _ _ r10 r11))
	(f-call 'gui_ctx 'box '((r4 local_ctx) 0 0 r10 r11))

	;darker colour
	(f-call 'view 'get_color '((r4 local_this)) '(_ r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'set_color '((r4 local_ctx) r1))

	;draw middle
	(f-call 'progress 'get_bounds '((r4 local_this)) '(_ _ _ r10 r11))
	(vp-sub-cr (mul progress_border_size 2) r10)
	(vp-sub-cr (mul progress_border_size 2) r11)
	(vp-cpy-ir r0 progress_val r2)
	(vp-cpy-ir r0 progress_max r1)
	(vp-cpy-rr r10 r12)
	(vp-cpy-rr r10 r0)
	(vp-mul-rr r2 r0)
	(vp-xor-rr r2 r2)
	(vp-div-rrr r1 r2 r0)
	(vp-cpy-ri r0 r4 local_fill_complete)
	(vp-cpy-rr r0 r10)
	(vp-sub-rr r10 r12)
	(vp-cpy-ri r12 r4 local_fill_remain)
	(f-call 'gui_ctx 'filled_box '((r4 local_ctx) progress_border_size progress_border_size r10 r11))

	;very darker colour
	(f-call 'view 'get_color '((r4 local_this)) '(_ r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'darker '(r1) '(r1))
	(f-call 'gui_ctx 'set_color '((r4 local_ctx) r1))

	;draw middle
	(f-call 'progress 'get_bounds '((r4 local_this)) '(_ _ _ _ r11))
	(vp-cpy-cr progress_border_size r8)
	(vp-sub-cr (mul progress_border_size 2) r11)
	(vp-cpy-ir r4 local_fill_complete r9)
	(vp-add-rr r9 r8)
	(f-call 'gui_ctx 'filled_box '((r4 local_ctx) r8 progress_border_size (r4 local_fill_remain) r11))

	(vp-cpy-ir r4 local_this r0)
	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)

(def-func 'class/progress/layout)
	;inputs
	;r0 = progress object
	;trashes
	;all but r0, r4

	(f-jmp 'progress 'opaque '(r0))

(def-func-end)

(def-func 'class/progress/pref_size)
	;inputs
	;r0 = progress object
	;outputs
	;r10 = prefered width
	;r11 = prefered height
	;trashes
	;all but r0, r4

	(vp-cpy-cr 256 r10)
	(vp-cpy-cr 10 r11)
	(vp-ret)

(def-func-end)
