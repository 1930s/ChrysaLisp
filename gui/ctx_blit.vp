(import 'inc/func.inc)
(import 'inc/sdl2.inc)

(def-func 'gui/ctx_blit)
	;inputs
	;r0 = ctx
	;r1 = texture
	;r2 = color mod
	;r8 = x
	;r9 = y
	;r10 = width
	;r11 = height
	;trashes
	;all but r4

	(def-struct 'local)
		(struct 'local_drect 'sdl_rect)
		(struct 'local_srect 'sdl_rect)
		(struct 'local_clip_rect 'sdl_rect)
		(ptr 'local_ctx)
		(ulong 'local_texture)
		(ptr 'local_dirty_rect)
		(ptr 'local_old_stack)
	(def-struct-end)

	;align stack to 16 bytes for SDl
	(vp-cpy-rr r4 r15)
	(vp-sub-cr local_size r4)
	(vp-and-cr -16 r4)
	(vp-cpy-ri r15 r4 local_old_stack)

	;save draw rectangle info
	(vp-cpy-ri r0 r4 local_ctx)
	(vp-cpy-ri r1 r4 local_texture)
	(vp-add-ir r0 gui_ctx_x r8)
	(vp-add-ir r0 gui_ctx_y r9)
	(vp-cpy-ri-i r8 r4 (add local_drect sdl_rect_x))
	(vp-cpy-ri-i r9 r4 (add local_drect sdl_rect_y))
	(vp-cpy-ri-i r10 r4 (add local_drect sdl_rect_w))
	(vp-cpy-ri-i r11 r4 (add local_drect sdl_rect_h))
	(vp-xor-rr r8 r8)
	(vp-cpy-ri-i r8 r4 (add local_srect sdl_rect_x))
	(vp-cpy-ri-i r8 r4 (add local_srect sdl_rect_y))
	(vp-cpy-ri-i r10 r4 (add local_srect sdl_rect_w))
	(vp-cpy-ri-i r11 r4 (add local_srect sdl_rect_h))

	;set the color mod
	(vp-cpy-rr r2 r3)
	(vp-cpy-rr r2 r1)
	(vp-shr-cr 16 r3)
	(vp-shr-cr 8 r2)
	(vp-and-cr 0xff r3)
	(vp-and-cr 0xff r2)
	(vp-and-cr 0xff r1)
	(sdl-set-texture-color-mod '((r4 local_texture) , r3, r2, r1))

	;for each rect on the dirty region
	(vp-cpy-ir r4 local_ctx r0)
	(vp-cpy-ir r0 gui_ctx_dirty_region r0)
	(loop-flist-forward r0 0 r0 r0)
		(vp-cpy-ri r0 r4 local_dirty_rect)

		;set clip region to this region
		(vp-cpy-ir-i r0 gui_rect_x r8)
		(vp-cpy-ir-i r0 gui_rect_y r9)
		(vp-cpy-ir-i r0 gui_rect_x1 r10)
		(vp-cpy-ir-i r0 gui_rect_y1 r11)
		(vp-sub-rr r8 r10)
		(vp-sub-rr r9 r11)
		(vp-cpy-ri-i r8 r4 (add local_clip_rect sdl_rect_x))
		(vp-cpy-ri-i r9 r4 (add local_clip_rect sdl_rect_y))
		(vp-cpy-ri-i r10 r4 (add local_clip_rect sdl_rect_w))
		(vp-cpy-ri-i r11 r4 (add local_clip_rect sdl_rect_h))
		(vp-cpy-ir r4 local_ctx r0)
		(sdl-render-set-clip-rect '((r0 gui_ctx_sdl_ctx) , (& r4 local_clip_rect)))

		;blit the texture
		(vp-cpy-ir r4 local_ctx r0)
		(sdl-render-copy '((r0 gui_ctx_sdl_ctx) , (r4 local_texture) , (& r4 local_srect) , (& r4 local_drect)))

		(vp-cpy-ir r4 local_dirty_rect r0)
	(loop-end)

	(vp-cpy-ir r4 local_old_stack r4)
	(vp-ret)

(def-func-end)
