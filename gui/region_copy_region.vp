(import 'inc/func.inc)
(import 'inc/gui.inc)

(def-func 'gui/region_copy_region)
	;inputs
	;r0 = region heap pointer
	;r1 = source region listhead pointer
	;r2 = dest region listhead pointer
	;r3 = copy region listhead pointer
	;r8 = x translation
	;r9 = y translation
	;trashes
	;r1-r3, r5-r15

	(def-struct 'local)
		(ptr 'local_node)
		(ptr 'local_slist)
		(ptr 'local_dlist)
		(long 'local_dx)
		(long 'local_dy)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src '(r1, r2, r8, r9))
	(set-dst '((r4 local_slist) , (r4 local_dlist) , (r4 local_dx) , (r4 local_dy)))
	(map-src-to-dst)

	;run through copy region list
	(loop-flist-forward r3 r1 r1)
		(vp-cpy-ri r1 r4 local_node)

		(vp-cpy-ir-i r1 gui_rect_x r8)
		(vp-cpy-ir-i r1 gui_rect_y r9)
		(vp-cpy-ir-i r1 gui_rect_x1 r10)
		(vp-cpy-ir-i r1 gui_rect_y1 r11)
		(vp-cpy-ir r4 local_dx r12)
		(vp-cpy-ir r4 local_dy r13)
		(vp-add-rr r12 r8)
		(vp-add-rr r13 r9)
		(vp-add-rr r12 r10)
		(vp-add-rr r13 r11)
		(f-call 'gui_region 'copy_rect '(r0, (r4 local_slist) , (r4 local_dlist) , r8, r9, r10, r11))

		(vp-cpy-ir r4 local_node r1)
	(loop-end)
	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
