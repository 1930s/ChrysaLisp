(import 'sys/func.inc)
(import 'gui/text/class.inc)
(import 'gui/label/class.inc)
(import 'gui/flow/class.inc)

(gen-new 'label)
(gen-create 'label)
(gen-class 'label)

(def-method 'label 'init)
	;inputs
	;r0 = label object (ptr)
	;r1 = vtable (pptr)
	;outputs
	;r0 = label object (ptr)
	;r1 = 0 if error, else ok
	;trashes
	;all but r0

	(ptr 'this)
	(union
		'(ptr 'vtable)
		'(ulong 'ok))

	(push-scope)
	(f-entry 'label 'init {this, vtable})

	;init parent
	(s-call 'label 'init {this, vtable} {_, ok})
	(vpif {ok})
		;add my flow
		(f-call 'flow 'create nil {this->label_flow})
		(assign {0} {this->label_flow->view_flags})
		(v-call 'label 'add_child {this, this->label_flow})
		(f-call 'label 'set_long_prop {this, prop_flow_flags, flow_flag_right | flow_flag_align_vcenter})
		(f-call 'label 'set_long_prop {this, prop_border, 0})

		;add my text object
		(f-call 'text 'create nil {this->label_text})
		(v-call 'flow 'add_child {this->label_flow, this->label_text})
	(endif)

	(f-exit 'label 'init {this, ok})
	(pop-scope)
	(return)

(def-func-end)

(def-method 'label 'draw)
	;inputs
	;r0 = view object (ptr)
	;r1 = draw ctx (ptr)
	;trashes
	;all but r0

	(ptr 'this 'ctx)
	(uint 'depth)

	(push-scope)
	(f-entry 'label 'draw {this, ctx})

	;draw panel
	(f-call 'label 'get_long_prop {this, prop_border} {_, depth})
	(f-call 'label 'draw_panel {this, ctx, 1, depth})

	(f-exit 'label 'draw {this})
	(pop-scope)
	(return)

(def-func-end)

(def-method 'label 'layout)
	;inputs
	;r0 = label object (ptr)
	;trashes
	;all but r0

	(ptr 'this)
	(union
		'(uint 'col)
		'(uint 'depth))

	(push-scope)
	(f-entry 'label 'layout {this})

	(f-call 'label 'get_long_prop {this, prop_border} {_, depth})
	(f-call 'flow 'set_bounds {this->label_flow, depth, depth,
		this->view_w - (depth * 2), this->view_h - (depth * 2)})
	(v-call 'flow 'layout {this->label_flow})

	(f-call 'label 'get_long_prop {this, prop_color} {_, col})
	(vpif {col >> 24 == 0xff})
		(f-call 'label 'opaque {this})
	(endif)

	(f-exit 'label 'layout {this})
	(pop-scope)
	(return)

(def-func-end)

(def-method 'label 'pref_size)
	;inputs
	;r0 = label object (ptr)
	;outputs
	;r9 = preferred width (pixels)
	;r10 = preferred height (pixels)
	;trashes
	;all but r0

	(ptr 'this)
	(uint 'depth 'w 'h 'mw 'mh)

	(push-scope)
	(f-entry 'label 'pref_size {this})

	(f-call 'label 'get_long_prop {this, prop_border} {_, depth})
	(f-call 'label 'get_long_prop {this, prop_min_width} {_, mw})
	(f-call 'label 'get_long_prop {this, prop_min_height} {_, mh})

	(v-call 'flow 'pref_size {this->label_flow} {_, w, h})
	(vpif {mw > w})
		(assign {mw} {w})
	(endif)
	(vpif {mh > h})
		(assign {mh} {h})
	(endif)

	(f-exit 'label 'pref_size {this, w + (depth * 2), h + (depth * 2)})
	(pop-scope)
	(return)

(def-func-end)
