(import 'inc/func.inc)
(import 'inc/gui.inc)

(def-func 'gui/ctx_panel)
	;inputs
	;r0 = ctx object
	;r1 = color
	;r2 = flags
	;r3 = depth
	;r8 = x
	;r9 = y
	;r10 = width
	;r11 = height
	;trashes
	;all r4

	(def-struct 'local)
		(ptr 'local_ctx)
		(long 'local_color)
		(long 'local_flags)
		(long 'local_depth)
		(long 'local_x)
		(long 'local_y)
		(long 'local_w)
		(long 'local_h)
	(def-struct-end)

	;save inputs
	(vp-sub-cr local_size r4)
	(set-src r0, r1, r2, r3, r8, r9, r10, r11)
	(set-dst [r4 + local_ctx], [r4 + local_color], [r4 + local_flags], [r4 + local_depth], \)
			[r4 + local_x], [r4 + local_y], [r4 + local_w], [r4 + local_h]
	(map-src-to-dst)

	if r2, !=, 0
		;fill middle
		(f-call 'gui_ctx 'set_color '(r0, r1))

		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		(vp-cpy-ir r4 local_h r11)
		vp_cpy [r4 + local_depth],r12
		(vp-add-rr r12 r8)
		(vp-add-rr r12 r9)
		vp_shl 1, r12
		(vp-sub-rr r12 r10)
		(vp-sub-rr r12 r11)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r11))
	endif

	vp_cpy [r4 + local_depth],r12
	if r12, >, 0
		;brighter colour
		(f-call 'gui_ctx 'brighter '([r4 + local_color]) '(r1))
		(f-call 'gui_ctx 'set_color '([r4 + local_ctx], r1))

		;fill left edge and top
		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		vp_cpy [r4 + local_depth],r11
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r11))

		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		vp_cpy [r4 + local_depth],r10
		(vp-cpy-ir r4 local_h r11)
		(vp-add-rr r10 r9)
		(vp-sub-rr r10 r11)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r11))

		;darker colour
		(f-call 'gui_ctx 'darker '([r4 + local_color]) '(r1))
		(f-call 'gui_ctx 'set_color '([r4 + local_ctx], r1))

		;fill bottom edge and right
		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		(vp-cpy-ir r4 local_h r11)
		vp_cpy [r4 + local_depth],r12
		(vp-add-rr r12 r8)
		(vp-sub-rr r12 r10)
		(vp-add-rr r11 r9)
		(vp-sub-rr r12 r9)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r12))

		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		(vp-cpy-ir r4 local_h r11)
		vp_cpy [r4 + local_depth],r12
		(vp-add-rr r10 r8)
		(vp-sub-rr r12 r8)
		(vp-add-rr r12 r9)
		(vp-sub-rr r12 r11)
		(vp-sub-rr r12 r11)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r12, r11))
	else
		;sunken panel
		(vp-mul-cr -1 r12)
		(vp-cpy-ri r12 r4 local_depth)

		;darker colour
		(f-call 'gui_ctx 'darker '([r4 + local_color]) '(r1))
		(f-call 'gui_ctx 'set_color '([r4 + local_ctx], r1))

		;fill left edge and top
		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		vp_cpy [r4 + local_depth],r11
		(vp-sub-rr r11 r10)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r11))

		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		vp_cpy [r4 + local_depth],r10
		(vp-cpy-ir r4 local_h r11)
		(vp-add-rr r10 r9)
		(vp-sub-rr r10 r11)
		(vp-sub-rr r10 r11)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r11))

		;brighter colour
		(f-call 'gui_ctx 'brighter '([r4 + local_color]) '(r1))
		(f-call 'gui_ctx 'set_color '([r4 + local_ctx], r1))

		;fill bottom edge and right
		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		(vp-cpy-ir r4 local_h r11)
		vp_cpy [r4 + local_depth],r12
		(vp-add-rr r11 r9)
		(vp-sub-rr r12 r9)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r10, r12))

		(vp-cpy-ir r4 local_x r8)
		(vp-cpy-ir r4 local_y r9)
		(vp-cpy-ir r4 local_w r10)
		(vp-cpy-ir r4 local_h r11)
		vp_cpy [r4 + local_depth],r12
		(vp-add-rr r10 r8)
		(vp-sub-rr r12 r8)
		(vp-sub-rr r12 r11)
		(f-call 'gui_ctx 'filled_box '([r4 + local_ctx], r8, r9, r12, r11))
	endif

	(vp-add-cr local_size r4)
	(vp-ret)

(def-func-end)
