(import 'inc/func.inc)
(import 'inc/gui.inc)

(def-func 'gui/region_copy_rect)
	;inputs
	;r0 = region heap pointer
	;r1 = source region listhead pointer
	;r2 = dest region listhead pointer
	;r8 = x (pixels)
	;r9 = y (pixels)
	;r10 = x1 (pixels)
	;r11 = y1 (pixels)
	;trashes
	;r1-r2, r5-r15

	;check for any obvious errors in inputs
	(vpif '(r10 > r8))
		(vpif '(r11 > r9))
			;run through source region list
			(vp-cpy-rr r2 r5)
			(loop-flist-forward r1 0 r7 r7)
				;not in contact ?
				(vp-cpy-ir-i r7 gui_rect_x r12)
				(continueif '(r12 >= r10))
				(vp-cpy-ir-i r7 gui_rect_y r13)
				(continueif '(r13 >= r11))
				(vp-cpy-ir-i r7 gui_rect_x1 r14)
				(continueif '(r8 >= r14))
				(vp-cpy-ir-i r7 gui_rect_y1 r15)
				(continueif '(r9 >= r15))

				(f-call 'sys_heap 'alloc '(r0) '(r1))
				(continueif '(r1 == 0))
				(ln-add-fnode r5 r1 r2)

				;jump to correct splitting code
				(vp-jmpif '(r12 >= r8) 'copy_split1)
				(vp-jmpif '(r13 >= r9) 'copy_split2)
				(vp-jmpif '(r10 >= r14) 'copy_split4)
				(vp-jmpif '(r11 >= r15) 'copy_xyx1)

			copy_xyx1y1:
				;r8 + r9 + r10 + r11 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split1:
				;jump to correct splitting code
				(vp-jmpif '(r13 >= r9) 'copy_split3)
				(vp-jmpif '(r10 >= r14) 'copy_split5)
				(vp-jmpif '(r11 >= r15) 'copy_yx1)

			copy_yx1y1:
				;r9 + r10 + r11 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split2:
				;jump to correct splitting code
				(vp-jmpif '(r10 >= r14) 'copy_split6)
				(vp-jmpif '(r11 >= r15) 'copy_xx1)

			copy_xx1y1:
				;r8 + r10 + r11 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split3:
				;jump to correct splitting code
				(vp-jmpif '(r10 >= r14) 'copy_split7)
				(vp-jmpif '(r11 >= r15) 'copy_x1)

			copy_x1y1:
				;r10 + r11 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split4:
				;jump to correct splitting code
				(vp-jmpif '(r11 >= r15) 'copy_xy)

			copy_xyy1:
				;r8 + r9 + r11 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split5:
				;jump to correct splitting code
				(vp-jmpif '(r11 >= r15) 'copy_y)

			copy_yy1:
				;r9 + r11 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split6:
				;jump to correct splitting code
				(vp-jmpif '(r11 >= r15) 'copy_x)

			copy_xy1:
				;r8 + r11 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_split7:
				;jump to correct splitting code
				(vp-jmpif '(r11 >= r15) 'copy_encl)

			copy_y1:
				;r11 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r11 r1 gui_rect_y1)
				(continue)

			copy_xyx1:
				;r8 + r9 + r10 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			(vp-label 'copy_encl)
				;region is enclosed
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			(vp-label 'copy_x)
				;r8 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			(vp-label 'copy_y)
				;r9 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			(vp-label 'copy_xy)
				;r8 + r9 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r14 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			copy_x1:
				;r10 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			copy_xx1:
				;r8 + r10 inside
				(vp-cpy-ri-i r8 r1 gui_rect_x)
				(vp-cpy-ri-i r13 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
				(continue)

			copy_yx1:
				;r9 + r10 inside
				(vp-cpy-ri-i r12 r1 gui_rect_x)
				(vp-cpy-ri-i r9 r1 gui_rect_y)
				(vp-cpy-ri-i r10 r1 gui_rect_x1)
				(vp-cpy-ri-i r15 r1 gui_rect_y1)
			(loop-end)
		(endif)
	(endif)
	(vp-ret)

(def-func-end)
