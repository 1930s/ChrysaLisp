(import 'inc/func.inc)
(import 'inc/gui.inc)

(def-func 'gui/region_clip_rect)
	;inputs
	;r0 = region heap pointer
	;r1 = source region listhead pointer
	;r8 = x (pixels)
	;r9 = y (pixels)
	;r10 = x1 (pixels)
	;r11 = y1 (pixels)
	;trashes
	;r5-r15

	;check for any obvious errors in inputs
	(vpif '(r10 > r8))
		(vpif '(r11 > r9))
			;run through source region list
			(vp-cpy-rr r1 r7)
			(loop-start)
			(vp-label 'loop)
				(ln-next-fnode r7 r6)

				(switch)
					(vp-cpy-ir-i r7 gui_rect_x r12)
					(breakif '(r12 >= r10))
					(vp-cpy-ir-i r7 gui_rect_y r13)
					(breakif '(r13 >= r11))
					(vp-cpy-ir-i r7 gui_rect_x1 r14)
					(breakif '(r14 <= r8))
					(vp-cpy-ir-i r7 gui_rect_y1 r15)
					(breakif '(r15 <= r9))

					;clip region
					(vpif '(r12 < r8))
						(vp-cpy-ri-i r8 r7 gui_rect_x)
					(endif)
					(vpif '(r13 < r9))
						(vp-cpy-ri-i r9 r7 gui_rect_y)
					(endif)
					(vpif '(r14 > r10))
						(vp-cpy-ri-i r10 r7 gui_rect_x1)
					(endif)
					(vpif '(r15 > r11))
						(vp-cpy-ri-i r11 r7 gui_rect_y1)
					(endif)
					(vp-jmp 'loop)
				(endswitch)

				;region is outside
				(vp-cpy-rr r7 r5)
				(ln-remove-fnode r7 r6)
				(hp-freecell r0 r5 r6)
			(loop-end)
		(endif)
	(endif)
	(vp-ret)

(def-func-end)
