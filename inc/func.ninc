%ifndef FUNC_1234
%define FUNC_1234

%include 'inc/code.ninc'

;;;;;;;;;;;;;
; func macros
;;;;;;;;;;;;;

%macro fn_add_string 1
	;inputs
	;%1 = string

	%assign _string_num_ 0
	%rep _string_total_
		%ifidn _string_str_%[_string_num_]_, %1
			%exitrep
		%else
			%assign _string_num_ _string_num_ + 1
		%endif
	%endrep
	%if _string_num_ = _string_total_
		%xdefine _string_str_%[_string_num_]_ %1
		%assign _string_total_ _string_total_ + 1
	%endif
%endmacro

%macro fn_string 2
	;inputs
	;%1 = string
	;%2 = register

	fn_add_string %1
	vp_lea_p _ref_%[_string_num_]_string, %2
%endmacro

%macro fn_add_path 1
	;inputs
	;%1 = function path name

	%assign _path_num_ 0
	%rep _path_total_
		%ifidn _path_str_%[_path_num_]_, %1
			%exitrep
		%else
			%assign _path_num_ _path_num_ + 1
		%endif
	%endrep
	%if _path_num_ = _path_total_
		%xdefine _path_str_%[_path_num_]_ %1
		%assign _path_total_ _path_total_ + 1
	%endif
%endmacro

%macro fn_add_link 1
	;inputs
	;%1 = function path name

	fn_add_path %1
	%assign _link_%[_link_total_]_path_num_ _path_num_
	%assign _link_total_ _link_total_ + 1
%endmacro

%macro fn_find_link 1
	;inputs
	;%1 = function path name

	%assign _link_num_ 0
	%rep _link_total_
		%ifidn _path_str_%[_link_%[_link_num_]_path_num_]_, %1
			%exitrep
		%else
			%assign _link_num_ _link_num_ + 1
		%endif
	%endrep
	%if _link_num_ = _link_total_
		fn_add_link %1
	%endif
%endmacro

%macro fn_bind 2
	;inputs
	;%1 = function path name
	;%2 = register

	fn_find_link %1
	vp_cpy_p _ref_%[_link_num_]_link, %2
%endmacro

%macro fn_call 1
	;inputs
	;%1 = function path name

	fn_find_link %1
	vp_call_p _ref_%[_link_num_]_link
%endmacro

%macro fn_jmp 1
	;inputs
	;%1 = function path name

	fn_find_link %1
	vp_jmp_p _ref_%[_link_num_]_link
%endmacro

%macro def_func 1-2 4096
	;inputs
	;%1 = function path name
	;%2 = stack size

	BITS 64
	%defstr _func_name %1
	%assign _link_total_ 0
	%assign _path_total_ 0
	%assign _string_total_ 0
	align 8, db 0
_func_start:
	dq	-1
	dd	_func_end - _func_start
	dd	_func_entry - _func_start
	dd	_func_links - _func_start
	dd	_func_paths - _func_start
	dd %2
_func_name_start:
	db	_func_name
	db	0, _func_entry - _func_name_start
	align 8, db _func_entry - _func_name_start
_func_entry:
%endmacro

%macro def_func_end 0
	%assign %%i 0
	%rep _string_total_
_ref_%[%%i]_string:
		db	_string_str_%[%%i]_
		db	0
		%assign %%i %%i + 1
	%endrep
	align 8, db 0
_func_links:
	%assign %%i 0
	%rep _link_total_
_ref_%[%%i]_link:
		dq	_ref_%[_link_%[%%i]_path_num_]_path - $
		%assign %%i %%i + 1
	%endrep
	dq	0
_func_paths:
	%assign %%i 0
	%rep _path_total_
_ref_%[%%i]_path:
		%defstr %%p _path_str_%[%%i]_
		db	%%p
		db	0
		%assign %%i %%i + 1
	%endrep
	align 8, db 0
_func_end:
%endmacro

%endif
