(import 'inc/func.inc)
(import 'class/string/string.inc)
(import 'class/stream/stream.inc)
(import 'class/vector/vector.inc)
(import 'class/slave/slave.inc)

(def-func 'cmd/echo)

	(const 'char_lf 10)

	(ptr 'slave 'arg 'args 'stream)
	(uint 'argc 'index 'length)

	;init app vars
	(push-scope)

	;initialize pipe details and command args, abort on error
	(f-call 'slave 'create {} {slave})
	(vpif {slave})
		;echo args to stdout, arg 1 is command name
		(f-call 'slave 'get_args {slave} {args})
		(d-call 'vector 'get_length {args} {argc})
		(vpif {argc != 1})
			;strings from command line
			(assign {1} {index})
			(loop-while {index != argc})
				(f-call 'vector 'get_element {args, index} {arg})
				(f-call 'stream 'write {slave->slave_stdout, &arg->string_data, arg->string_length})
				(f-call 'stream 'write_char {slave->slave_stdout, char_lf})
				(assign {index + 1} {index})
				(f-call 'sys_task 'yield)
			(loop-end)
		(endif)

		;clean up
		(f-call 'slave 'deref {slave})
	(endif)
	(pop-scope)
	(return)

(def-func-end)
