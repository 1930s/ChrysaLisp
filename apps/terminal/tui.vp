(import 'sys/func.inc)
(import 'class/master/master.inc)
(import 'class/stream_msg_out/stream_msg_out.inc)
(import 'class/string/string.inc)

(def-struct 'tui_msg 'msg_header)
	(struct 'reply_id 'id)
(def-struct-end)

(def-struct 'stdin_msg 'msg_header)
	(ulong 'char)
(def-struct-end)

(def-func 'apps/terminal/tui)

	(defcvar 'buf_size 256)

	(def-struct 'local)
		(ptr 'master)
		(pubyte 'bufp)
		(struct 'buffer buf_size)
	(def-struct-end)

	(struct 'local 'local)
	(struct 'stdin_id 'id)
	(struct 'tui_id 'id)
	(ptr 'msg 'mailbox 'stream)
	(long 'state)

	;init app vars
	(push-scope)
	(f-call 'master 'create {} {local.local_master})
	(assign {&local.local_buffer} {local.local_bufp})
	(f-call 'sys_task 'mailbox {} {tui_id.id_mbox, tui_id.id_cpu})

	;start stdin polling task and send it tui mailbox id
	(f-call 'sys_task 'start {@apps/terminal/tui_child} {_, stdin_id.id_mbox, stdin_id.id_cpu})
	(f-call 'sys_mail 'alloc {} {msg})
	(assign {stdin_id.id_mbox} {msg->msg_dest.id_mbox})
	(assign {stdin_id.id_cpu} {msg->msg_dest.id_cpu})
	(assign {tui_id.id_mbox} {msg->tui_msg_reply_id.id_mbox})
	(assign {tui_id.id_cpu} {msg->tui_msg_reply_id.id_cpu})
	(assign {tui_msg_size} {msg->msg_length})
	(f-call 'sys_mail 'send {msg})

	;app event loop
	(loop-start)
		;select on multiple mailboxes
		(f-call 'master 'select {local.local_master, tui_id.id_mbox} {_, mailbox})

		;which mailbox has mail ?
		(vpif {mailbox == tui_id.id_mbox})
			;dispatch event to terminal
			(f-call 'sys_mail 'read {mailbox} {msg})
			(l-call 'terminal_input {&local, msg->stdin_msg_char} '(r0 r1))
			(f-call 'sys_mem 'free {msg})
		(else)
			;output from a pipe element
			(f-call 'master 'get_stream {local.local_master, mailbox} {_, stream})
			(l-call 'pipe_output {&local, stream} '(r0 r1) '(r0) {state})
			(vpif {state == -1})
				;EOF
				(f-call 'master 'stop {local.local_master})
			(endif)
		(endif)
		(f-call 'sys_task 'yield)
	(loop-end)

	;clean up
	(f-call 'master 'deref {local.local_master})
	(pop-scope)
	(return)

(vp-label 'pipe_output)
	;inputs
	;r0 = local
	;r1 = stream
	;outputs
	;r0 = -1 if EOF

	(ptr 'local 'stream)
	(int 'char 'ready)

	(push-scope)
	(assign '(r0 r1) {local, stream})

	(loop-start)
		(f-call 'stream 'read_char {stream} {_, char})
		(breakif {char == -1})
		(l-call 'terminal_output {local, char} '(r0 r1))
		(v-call 'stream 'read_ready {stream} {_, ready})
	(loop-untilnot {ready})

	(assign {char} '(r0))
	(pop-scope)
	(return)

(vp-label 'terminal_input)
	;inputs
	;r0 = local
	;r1 = char input

	(ptr 'local 'stream)
	(ulong 'length)
	(int 'char 'state)

	(push-scope)
	(assign '(r0 r1) {local, char})

	;echo char to terminal
;	(l-call 'terminal_output {local, char} '(r0 r1))

	;buffer char
	(assign {char} {*local->local_bufp})
	(assign {local->local_bufp - &local->local_buffer} {length})

	;send line ?
	(vpif {char == char_lf || char == char_cr})
		;what state ?
		(f-call 'master 'get_state {local->local_master} {_, state})
		(vpif {state == stream_mail_state_stopped})
			;start new pipe
			(breakifnot {length})
			(f-call 'master 'start {local->local_master, &local->local_buffer, length})
		(else)
			;feed active pipe
			(f-call 'master 'get_input {local->local_master} {_, stream})
			(f-call 'stream 'write {stream, &local->local_buffer, length})
			(f-call 'stream 'write_char {stream, char_lf})
			(v-call 'stream 'write_flush {stream})
		(endif)
		(assign {&local->local_buffer} {local->local_bufp})
	(elseif {char == char_esc})
		;esc
		(f-call 'master 'get_state {local->local_master} {_, state})
		(vpif {state == stream_mail_state_started})
			;feed active pipe, then EOF
			(f-call 'master 'get_input {local->local_master} {_, stream})
			(f-call 'stream 'write {stream, &local->local_buffer, length})
			(v-call 'stream 'write_flush {stream})
			(assign {&local->local_buffer} {local->local_bufp})

			;send stopping
			(f-call 'stream_msg_out 'set_state {stream, stream_mail_state_stopping})
			(v-call 'stream 'write_next {stream})
			(v-call 'stream 'write_flush {stream})
		(endif)
	(elseifnot {char < char_space || char >= 127 || length == buf_size})
		;next char
		(assign {local->local_bufp + 1} {local->local_bufp})
	(endif)
	(pop-scope)
	(return)

(vp-label 'terminal_output)
	;inputs
	;r0 = local
	;r1 = char output

	(ptr 'local)
	(int 'char)

	(push-scope)
	(assign '(r0 r1) {local, char})

	(vpif {char == char_tab})
		;tab
		(f-call 'pii 'char {1, char_space})
		(f-call 'pii 'char {1, char_space})
		(f-call 'pii 'char {1, char_space})
		(f-call 'pii 'char {1, char_space})
	(else)
		(f-call 'pii 'char {1, char})
	(endif)

	(pop-scope)
	(return)

(def-func-end)

(def-func 'apps/terminal/tui_child)
	;stdin polling task

	(ptr 'msg)
	(struct 'tui_id 'id)
	(int 'char)

	(push-scope)

	;read tui mailbox id
	(f-call 'sys_mail 'mymail {} {msg})
	(assign {msg->tui_msg_reply_id.id_mbox} {tui_id.id_mbox})
	(assign {msg->tui_msg_reply_id.id_cpu} {tui_id.id_cpu})
	(f-call 'sys_mem 'free {msg})

	;non block on stdin
	(sys-fcntl {0, f_getfl, 0} {char})
	(sys-fcntl {0, f_setfl, char | o_nonblock} '(_))

	;poll stdin and send char to tui
	(loop-start)
	(vp-label 'nextchar)
		(sys-read-char {0} {char})
		(vpif {char})
			(f-call 'sys_mail 'alloc {} {msg})
			(assign {tui_id.id_mbox} {msg->msg_dest.id_mbox})
			(assign {tui_id.id_cpu} {msg->msg_dest.id_cpu})
			(assign {char} {msg->stdin_msg_char})
			(assign {stdin_msg_size} {msg->msg_length})
			(f-call 'sys_mail 'send {msg})
			(goto 'nextchar)
		(endif)
		(f-call 'sys_task 'sleep {10000})
	(loop-end)

	(pop-scope)
	(return)

(def-func-end)
